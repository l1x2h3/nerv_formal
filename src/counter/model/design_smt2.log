
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.46+124 (git sha1 d1695ad99, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \counter_top
Used module:     \counter_props
Used module:     \counter

2.2. Analyzing design hierarchy..
Top module:  \counter_top
Used module:     \counter_props
Used module:     \counter
Removed 0 unused modules.
Module counter_top directly or indirectly contains formal properties -> setting "keep" attribute.
Module counter_props directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== counter_top ===

   Number of wires:                  5
   Number of wire bits:              8
   Number of public wires:           4
   Number of public wire bits:       7
   Number of ports:                  3
   Number of port bits:              3
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     $assume                         1
     $not                            1
     counter                         1
     counter_props                   1

=== counter_props ===

   Number of wires:                 27
   Number of wire bits:             40
   Number of public wires:           8
   Number of public wire bits:      17
   Number of ports:                  4
   Number of port bits:              7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 27
     $add                            1
     $anyinit                        4
     $assert                         2
     $assume                         2
     $eq                             1
     $ff                             4
     $initstate                      1
     $logic_and                      2
     $logic_not                      2
     $mux                            6
     $ne                             1
     $not                            1

=== counter ===

   Number of wires:                  9
   Number of wire bits:             24
   Number of public wires:           5
   Number of public wire bits:      11
   Number of ports:                  4
   Number of port bits:              7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  7
     $add                            1
     $anyinit                        1
     $assume                         1
     $mux                            3
     $not                            1

=== design hierarchy ===

   counter_top                       1
     counter                         1
     counter_props                   1

   Number of wires:                 41
   Number of wire bits:             72
   Number of public wires:          17
   Number of public wire bits:      35
   Number of ports:                 11
   Number of port bits:             17
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 36
     $add                            2
     $anyinit                        5
     $assert                         2
     $assume                         4
     $eq                             1
     $ff                             4
     $initstate                      1
     $logic_and                      2
     $logic_not                      2
     $mux                            9
     $ne                             1
     $not                            3

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module counter.
Creating SMT-LIBv2 representation of module counter_props.
Creating SMT-LIBv2 representation of module counter_top.

End of script. Logfile hash: 2641765912, CPU: user 0.00s system 0.01s, MEM: 13.41 MB peak
Yosys 0.46+124 (git sha1 d1695ad99, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 67% 2x write_smt2 (0 sec), 17% 2x read_ilang (0 sec), ...
