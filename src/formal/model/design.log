
 /----------------------------------------------------------------------------\
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |  Copyright (C) 2012 - 2024  Claire Xenia Wolf <claire@yosyshq.com>         |
 |  Distributed under an ISC-like license, type "license" to see terms        |
 \----------------------------------------------------------------------------/
 Yosys 0.46+124 (git sha1 d1695ad99, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)

-- Executing script file `../model/design.ys' --

1. Executing Verilog-2005 frontend: define.sv
Parsing Verilog input from `define.sv' to AST representation.
Successfully finished Verilog frontend.

2. Executing Verilog-2005 frontend: top_formal.sv
Parsing formal Verilog input from `top_formal.sv' to AST representation.
Generating RTLIL representation for module `\top_formal'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: nerv_wrapper.sv
Parsing formal Verilog input from `nerv_wrapper.sv' to AST representation.
Generating RTLIL representation for module `\nerv_extended_wrapper'.
Warning: reg '\result_csr_mcounteren' is assigned in a continuous assignment at nerv_wrapper.sv:201.12-201.41.
Warning: reg '\result_reg_0' is assigned in a continuous assignment at nerv_wrapper.sv:321.12-321.32.
Warning: reg '\result_reg_4' is assigned in a continuous assignment at nerv_wrapper.sv:325.12-325.44.
Warning: reg '\result_reg_5' is assigned in a continuous assignment at nerv_wrapper.sv:326.12-326.44.
Warning: reg '\result_reg_6' is assigned in a continuous assignment at nerv_wrapper.sv:327.12-327.44.
Warning: reg '\result_reg_7' is assigned in a continuous assignment at nerv_wrapper.sv:328.12-328.44.
Warning: reg '\result_reg_8' is assigned in a continuous assignment at nerv_wrapper.sv:329.12-329.44.
Warning: reg '\result_reg_9' is assigned in a continuous assignment at nerv_wrapper.sv:330.12-330.44.
Warning: reg '\result_reg_10' is assigned in a continuous assignment at nerv_wrapper.sv:331.12-331.46.
Warning: reg '\result_reg_11' is assigned in a continuous assignment at nerv_wrapper.sv:332.12-332.46.
Warning: reg '\result_reg_12' is assigned in a continuous assignment at nerv_wrapper.sv:333.12-333.46.
Warning: reg '\result_reg_13' is assigned in a continuous assignment at nerv_wrapper.sv:334.12-334.46.
Warning: reg '\result_reg_14' is assigned in a continuous assignment at nerv_wrapper.sv:335.12-335.46.
Warning: reg '\result_reg_15' is assigned in a continuous assignment at nerv_wrapper.sv:336.12-336.46.
Warning: reg '\result_reg_16' is assigned in a continuous assignment at nerv_wrapper.sv:337.12-337.46.
Warning: reg '\result_reg_17' is assigned in a continuous assignment at nerv_wrapper.sv:338.12-338.46.
Warning: reg '\result_reg_18' is assigned in a continuous assignment at nerv_wrapper.sv:339.12-339.46.
Warning: reg '\result_reg_19' is assigned in a continuous assignment at nerv_wrapper.sv:340.12-340.46.
Warning: reg '\result_reg_20' is assigned in a continuous assignment at nerv_wrapper.sv:341.12-341.46.
Warning: reg '\result_reg_21' is assigned in a continuous assignment at nerv_wrapper.sv:342.12-342.46.
Warning: reg '\result_reg_22' is assigned in a continuous assignment at nerv_wrapper.sv:343.12-343.46.
Warning: reg '\result_reg_23' is assigned in a continuous assignment at nerv_wrapper.sv:344.12-344.46.
Warning: reg '\result_reg_24' is assigned in a continuous assignment at nerv_wrapper.sv:345.12-345.46.
Warning: reg '\result_reg_25' is assigned in a continuous assignment at nerv_wrapper.sv:346.12-346.46.
Warning: reg '\result_reg_26' is assigned in a continuous assignment at nerv_wrapper.sv:347.12-347.46.
Warning: reg '\result_reg_27' is assigned in a continuous assignment at nerv_wrapper.sv:348.12-348.46.
Warning: reg '\result_reg_28' is assigned in a continuous assignment at nerv_wrapper.sv:349.12-349.46.
Warning: reg '\result_reg_29' is assigned in a continuous assignment at nerv_wrapper.sv:350.12-350.46.
Warning: reg '\result_reg_30' is assigned in a continuous assignment at nerv_wrapper.sv:351.12-351.46.
Warning: reg '\result_reg_31' is assigned in a continuous assignment at nerv_wrapper.sv:352.12-352.46.
Warning: reg '\result_csr_misa' is assigned in a continuous assignment at nerv_wrapper.sv:356.12-356.48.
Warning: reg '\result_csr_medeleg' is assigned in a continuous assignment at nerv_wrapper.sv:357.12-357.62.
Warning: reg '\result_csr_mideleg' is assigned in a continuous assignment at nerv_wrapper.sv:358.12-358.62.
Warning: reg '\result_csr_mcause' is assigned in a continuous assignment at nerv_wrapper.sv:380.12-380.42.
Warning: reg '\result_csr_cycle' is assigned in a continuous assignment at nerv_wrapper.sv:383.12-383.60.
Warning: reg '\result_csr_scounteren' is assigned in a continuous assignment at nerv_wrapper.sv:384.12-384.65.
Warning: reg '\result_csr_scause' is assigned in a continuous assignment at nerv_wrapper.sv:385.12-385.61.
Warning: reg '\result_csr_stvec' is assigned in a continuous assignment at nerv_wrapper.sv:386.12-386.60.
Warning: reg '\result_csr_sepc' is assigned in a continuous assignment at nerv_wrapper.sv:387.12-387.59.
Warning: reg '\result_csr_stval' is assigned in a continuous assignment at nerv_wrapper.sv:388.12-388.60.
Warning: reg '\result_csr_sscratch' is assigned in a continuous assignment at nerv_wrapper.sv:389.12-389.63.
Warning: reg '\result_csr_satp' is assigned in a continuous assignment at nerv_wrapper.sv:390.12-390.59.
Warning: reg '\result_csr_pmpcfg0' is assigned in a continuous assignment at nerv_wrapper.sv:391.12-391.62.
Warning: reg '\result_csr_pmpcfg1' is assigned in a continuous assignment at nerv_wrapper.sv:392.12-392.62.
Warning: reg '\result_csr_pmpcfg2' is assigned in a continuous assignment at nerv_wrapper.sv:393.12-393.62.
Warning: reg '\result_csr_pmpcfg3' is assigned in a continuous assignment at nerv_wrapper.sv:394.12-394.62.
Warning: reg '\result_csr_pmpaddr0' is assigned in a continuous assignment at nerv_wrapper.sv:395.12-395.63.
Warning: reg '\result_csr_pmpaddr1' is assigned in a continuous assignment at nerv_wrapper.sv:396.12-396.63.
Warning: reg '\result_csr_pmpaddr2' is assigned in a continuous assignment at nerv_wrapper.sv:397.12-397.63.
Warning: reg '\result_csr_pmpaddr3' is assigned in a continuous assignment at nerv_wrapper.sv:398.12-398.63.
Warning: reg '\result_csr_MXLEN' is assigned in a continuous assignment at nerv_wrapper.sv:399.12-399.41.
Warning: reg '\result_csr_IALIGN' is assigned in a continuous assignment at nerv_wrapper.sv:400.12-400.41.
Warning: reg '\result_csr_ILEN' is assigned in a continuous assignment at nerv_wrapper.sv:401.12-401.41.
Warning: wire '\exception_pc' is assigned in a block at nerv_wrapper.sv:417.19-419.56.
Warning: wire '\exception_pc' is assigned in a block at nerv_wrapper.sv:420.22-420.42.
Warning: Replacing memory \shadow_regfile with list of registers. See nerv_wrapper.sv:287
nerv_wrapper.sv:128: Warning: Identifier `\clk' is implicitly declared.
nerv_wrapper.sv:270: Warning: Identifier `\uut.rvfi_csr_mstatus_rdata' is implicitly declared.
nerv_wrapper.sv:271: Warning: Identifier `\uut.rvfi_csr_mstatush_rdata' is implicitly declared.
nerv_wrapper.sv:291: Warning: Identifier `\uut.regfile' is implicitly declared.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:291: Warning: Range select out of bounds on signal `\uut.regfile': Setting result bit to undef.
nerv_wrapper.sv:317: Warning: Identifier `\uut.rvfi_pc_rdata' is implicitly declared.
nerv_wrapper.sv:357: Warning: Identifier `\uut.rvfi_csr_medeleg_rdata' is implicitly declared.
nerv_wrapper.sv:358: Warning: Identifier `\uut.rvfi_csr_mideleg_rdata' is implicitly declared.
nerv_wrapper.sv:370: Warning: Identifier `\uut.rvfi_trap' is implicitly declared.
nerv_wrapper.sv:370: Warning: Identifier `\uut.rvfi_csr_mcause_rdata' is implicitly declared.
nerv_wrapper.sv:370: Warning: Range select out of bounds on signal `\uut.rvfi_csr_mcause_rdata': Setting result bit to undef.
nerv_wrapper.sv:371: Warning: Identifier `\uut.csr_mcause_wdata' is implicitly declared.
nerv_wrapper.sv:374: Warning: Identifier `\uut.irq_num' is implicitly declared.
nerv_wrapper.sv:375: Warning: Range select [4:0] out of bounds on signal `\uut.irq_num': Setting all 5 result bits to undef.
nerv_wrapper.sv:383: Warning: Identifier `\uut.rvfi_csr_cycle_rdata' is implicitly declared.
nerv_wrapper.sv:384: Warning: Identifier `\uut.rvfi_csr_scounteren_rdata' is implicitly declared.
nerv_wrapper.sv:385: Warning: Identifier `\uut.rvfi_csr_scause_rdata' is implicitly declared.
nerv_wrapper.sv:386: Warning: Identifier `\uut.rvfi_csr_stvec_rdata' is implicitly declared.
nerv_wrapper.sv:387: Warning: Identifier `\uut.rvfi_csr_sepc_rdata' is implicitly declared.
nerv_wrapper.sv:388: Warning: Identifier `\uut.rvfi_csr_stval_rdata' is implicitly declared.
nerv_wrapper.sv:389: Warning: Identifier `\uut.rvfi_csr_sscratch_rdata' is implicitly declared.
nerv_wrapper.sv:390: Warning: Identifier `\uut.rvfi_csr_satp_rdata' is implicitly declared.
nerv_wrapper.sv:391: Warning: Identifier `\uut.rvfi_csr_pmpcfg0_rdata' is implicitly declared.
nerv_wrapper.sv:392: Warning: Identifier `\uut.rvfi_csr_pmpcfg1_rdata' is implicitly declared.
nerv_wrapper.sv:393: Warning: Identifier `\uut.rvfi_csr_pmpcfg2_rdata' is implicitly declared.
nerv_wrapper.sv:394: Warning: Identifier `\uut.rvfi_csr_pmpcfg3_rdata' is implicitly declared.
nerv_wrapper.sv:395: Warning: Identifier `\uut.rvfi_csr_pmpaddr0_rdata' is implicitly declared.
nerv_wrapper.sv:396: Warning: Identifier `\uut.rvfi_csr_pmpaddr1_rdata' is implicitly declared.
nerv_wrapper.sv:397: Warning: Identifier `\uut.rvfi_csr_pmpaddr2_rdata' is implicitly declared.
nerv_wrapper.sv:398: Warning: Identifier `\uut.rvfi_csr_pmpaddr3_rdata' is implicitly declared.
nerv_wrapper.sv:412: Warning: Range select out of bounds on signal `\uut.rvfi_csr_mcause_rdata': Setting result bit to undef.
nerv_wrapper.sv:419: Warning: Identifier `\uut.rvfi_csr_mepc_rdata' is implicitly declared.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: nerv.sv
Parsing Verilog input from `nerv.sv' to AST representation.
Generating RTLIL representation for module `\nerv'.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: CheckerWrapper.sv
Parsing formal Verilog input from `CheckerWrapper.sv' to AST representation.
Generating RTLIL representation for module `\RiscvTrans'.
Generating RTLIL representation for module `\RiscvCore'.
Generating RTLIL representation for module `\CheckerWithResult'.
Generating RTLIL representation for module `\CheckerWrapper'.
Successfully finished Verilog frontend.

6. Executing PREP pass.

6.1. Executing HIERARCHY pass (managing design hierarchy).

6.1.1. Analyzing design hierarchy..
Top module:  \top_formal
Used module:     \CheckerWrapper
Used module:         \CheckerWithResult
Used module:             \RiscvCore
Used module:                 \RiscvTrans
Used module:     \nerv_extended_wrapper
Used module:         \nerv

6.1.2. Analyzing design hierarchy..
Top module:  \top_formal
Used module:     \CheckerWrapper
Used module:         \CheckerWithResult
Used module:             \RiscvCore
Used module:                 \RiscvTrans
Used module:     \nerv_extended_wrapper
Used module:         \nerv
Removed 0 unused modules.
Module CheckerWrapper directly or indirectly contains formal properties -> setting "keep" attribute.
Module CheckerWithResult directly or indirectly contains formal properties -> setting "keep" attribute.
Module nerv_extended_wrapper directly or indirectly contains formal properties -> setting "keep" attribute.
Module top_formal directly or indirectly contains formal properties -> setting "keep" attribute.

6.2. Executing PROC pass (convert processes to netlists).

6.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `CheckerWithResult.$proc$CheckerWrapper.sv:8078$6520'.
Cleaned up 0 empty switches.

6.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 70 switch rules as full_case in process $proc$CheckerWrapper.sv:6833$6224 in module RiscvCore.
Marked 3 switch rules as full_case in process $proc$nerv.sv:1115$761 in module nerv.
Marked 1 switch rules as full_case in process $proc$nerv.sv:1104$758 in module nerv.
Marked 93 switch rules as full_case in process $proc$nerv.sv:655$370 in module nerv.
Marked 19 switch rules as full_case in process $proc$nerv.sv:632$369 in module nerv.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:0$74 in module nerv_extended_wrapper.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:0$69 in module nerv_extended_wrapper.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:415$67 in module nerv_extended_wrapper.
Marked 2 switch rules as full_case in process $proc$nerv_wrapper.sv:365$63 in module nerv_extended_wrapper.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:284$62 in module nerv_extended_wrapper.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:261$57 in module nerv_extended_wrapper.
Marked 1 switch rules as full_case in process $proc$nerv_wrapper.sv:233$51 in module nerv_extended_wrapper.
Removed a total of 0 dead cases.

6.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 104 redundant assignments.
Promoted 261 assignments to connections.

6.2.4. Executing PROC_INIT pass (extract init attributes).

6.2.5. Executing PROC_ARST pass (detect async resets in processes).

6.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~278 debug messages>

6.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\CheckerWithResult.$proc$CheckerWrapper.sv:8831$6521'.
     1/59: $assert$CheckerWrapper.sv:9066$6695_EN
     2/59: $assert$CheckerWrapper.sv:9062$6692_EN
     3/59: $assert$CheckerWrapper.sv:9058$6689_EN
     4/59: $assert$CheckerWrapper.sv:9054$6686_EN
     5/59: $assert$CheckerWrapper.sv:9050$6684_EN
     6/59: $assert$CheckerWrapper.sv:9046$6681_EN
     7/59: $assert$CheckerWrapper.sv:9042$6678_EN
     8/59: $assert$CheckerWrapper.sv:9038$6675_EN
     9/59: $assert$CheckerWrapper.sv:9034$6672_EN
    10/59: $assert$CheckerWrapper.sv:9030$6669_EN
    11/59: $assert$CheckerWrapper.sv:9026$6666_EN
    12/59: $assert$CheckerWrapper.sv:9022$6663_EN
    13/59: $assert$CheckerWrapper.sv:9018$6660_EN
    14/59: $assert$CheckerWrapper.sv:9014$6657_EN
    15/59: $assert$CheckerWrapper.sv:9010$6654_EN
    16/59: $assert$CheckerWrapper.sv:9006$6651_EN
    17/59: $assert$CheckerWrapper.sv:9002$6648_EN
    18/59: $assert$CheckerWrapper.sv:8998$6645_EN
    19/59: $assert$CheckerWrapper.sv:8994$6642_EN
    20/59: $assert$CheckerWrapper.sv:8990$6639_EN
    21/59: $assert$CheckerWrapper.sv:8986$6636_EN
    22/59: $assert$CheckerWrapper.sv:8982$6633_EN
    23/59: $assert$CheckerWrapper.sv:8978$6630_EN
    24/59: $assert$CheckerWrapper.sv:8974$6627_EN
    25/59: $assert$CheckerWrapper.sv:8970$6624_EN
    26/59: $assert$CheckerWrapper.sv:8966$6621_EN
    27/59: $assert$CheckerWrapper.sv:8962$6618_EN
    28/59: $assert$CheckerWrapper.sv:8958$6615_EN
    29/59: $assert$CheckerWrapper.sv:8954$6612_EN
    30/59: $assert$CheckerWrapper.sv:8950$6609_EN
    31/59: $assert$CheckerWrapper.sv:8946$6606_EN
    32/59: $assert$CheckerWrapper.sv:8942$6603_EN
    33/59: $assert$CheckerWrapper.sv:8938$6600_EN
    34/59: $assert$CheckerWrapper.sv:8934$6597_EN
    35/59: $assert$CheckerWrapper.sv:8930$6594_EN
    36/59: $assert$CheckerWrapper.sv:8926$6591_EN
    37/59: $assert$CheckerWrapper.sv:8922$6588_EN
    38/59: $assert$CheckerWrapper.sv:8918$6585_EN
    39/59: $assert$CheckerWrapper.sv:8914$6582_EN
    40/59: $assert$CheckerWrapper.sv:8910$6579_EN
    41/59: $assert$CheckerWrapper.sv:8906$6576_EN
    42/59: $assert$CheckerWrapper.sv:8902$6573_EN
    43/59: $assert$CheckerWrapper.sv:8898$6570_EN
    44/59: $assert$CheckerWrapper.sv:8894$6567_EN
    45/59: $assert$CheckerWrapper.sv:8890$6564_EN
    46/59: $assert$CheckerWrapper.sv:8886$6561_EN
    47/59: $assert$CheckerWrapper.sv:8882$6558_EN
    48/59: $assert$CheckerWrapper.sv:8878$6555_EN
    49/59: $assert$CheckerWrapper.sv:8874$6552_EN
    50/59: $assert$CheckerWrapper.sv:8870$6549_EN
    51/59: $assert$CheckerWrapper.sv:8866$6546_EN
    52/59: $assert$CheckerWrapper.sv:8862$6543_EN
    53/59: $assert$CheckerWrapper.sv:8858$6540_EN
    54/59: $assert$CheckerWrapper.sv:8854$6537_EN
    55/59: $assert$CheckerWrapper.sv:8850$6534_EN
    56/59: $assert$CheckerWrapper.sv:8846$6531_EN
    57/59: $assert$CheckerWrapper.sv:8842$6529_EN
    58/59: $assert$CheckerWrapper.sv:8838$6526_EN
    59/59: $assert$CheckerWrapper.sv:8834$6523_EN
Creating decoders for process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
     1/70: $0\state_internal_privilegeMode[1:0]
     2/70: $0\state_csr_ILEN[7:0]
     3/70: $0\state_csr_IALIGN[7:0]
     4/70: $0\state_csr_MXLEN[7:0]
     5/70: $0\state_csr_pmpaddr3[31:0]
     6/70: $0\state_csr_pmpaddr2[31:0]
     7/70: $0\state_csr_pmpaddr1[31:0]
     8/70: $0\state_csr_pmpaddr0[31:0]
     9/70: $0\state_csr_pmpcfg3[31:0]
    10/70: $0\state_csr_pmpcfg2[31:0]
    11/70: $0\state_csr_pmpcfg1[31:0]
    12/70: $0\state_csr_pmpcfg0[31:0]
    13/70: $0\state_csr_satp[31:0]
    14/70: $0\state_csr_sscratch[31:0]
    15/70: $0\state_csr_stval[31:0]
    16/70: $0\state_csr_sepc[31:0]
    17/70: $0\state_csr_stvec[31:0]
    18/70: $0\state_csr_scause[31:0]
    19/70: $0\state_csr_scounteren[31:0]
    20/70: $0\state_csr_cycle[31:0]
    21/70: $0\state_csr_mtval[31:0]
    22/70: $0\state_csr_mcause[31:0]
    23/70: $0\state_csr_mepc[31:0]
    24/70: $0\state_csr_mie[31:0]
    25/70: $0\state_csr_mip[31:0]
    26/70: $0\state_csr_mideleg[31:0]
    27/70: $0\state_csr_medeleg[31:0]
    28/70: $0\state_csr_mcounteren[31:0]
    29/70: $0\state_csr_mtvec[31:0]
    30/70: $0\state_csr_mscratch[31:0]
    31/70: $0\state_csr_mstatush[31:0]
    32/70: $0\state_csr_mstatus[31:0]
    33/70: $0\state_csr_mhartid[31:0]
    34/70: $0\state_csr_mimpid[31:0]
    35/70: $0\state_csr_marchid[31:0]
    36/70: $0\state_csr_mvendorid[31:0]
    37/70: $0\state_csr_misa[31:0]
    38/70: $0\state_pc[31:0]
    39/70: $0\state_reg_31[31:0]
    40/70: $0\state_reg_30[31:0]
    41/70: $0\state_reg_29[31:0]
    42/70: $0\state_reg_28[31:0]
    43/70: $0\state_reg_27[31:0]
    44/70: $0\state_reg_26[31:0]
    45/70: $0\state_reg_25[31:0]
    46/70: $0\state_reg_24[31:0]
    47/70: $0\state_reg_23[31:0]
    48/70: $0\state_reg_22[31:0]
    49/70: $0\state_reg_21[31:0]
    50/70: $0\state_reg_20[31:0]
    51/70: $0\state_reg_19[31:0]
    52/70: $0\state_reg_18[31:0]
    53/70: $0\state_reg_17[31:0]
    54/70: $0\state_reg_16[31:0]
    55/70: $0\state_reg_15[31:0]
    56/70: $0\state_reg_14[31:0]
    57/70: $0\state_reg_13[31:0]
    58/70: $0\state_reg_12[31:0]
    59/70: $0\state_reg_11[31:0]
    60/70: $0\state_reg_10[31:0]
    61/70: $0\state_reg_9[31:0]
    62/70: $0\state_reg_8[31:0]
    63/70: $0\state_reg_7[31:0]
    64/70: $0\state_reg_6[31:0]
    65/70: $0\state_reg_5[31:0]
    66/70: $0\state_reg_4[31:0]
    67/70: $0\state_reg_3[31:0]
    68/70: $0\state_reg_2[31:0]
    69/70: $0\state_reg_1[31:0]
    70/70: $0\state_reg_0[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:1115$761'.
     1/458: $1$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$769
     2/458: $1$memwr$\regfile$nerv.sv:1122$86_DATA[31:0]$768
     3/458: $1$memwr$\regfile$nerv.sv:1122$86_ADDR[4:0]$767
     4/458: $0\rvfi_valid[0:0]
     5/458: $0\pc[31:0]
     6/458: $0\next_rvfi_intr[0:0]
     7/458: $0\rvfi_mem_wdata[31:0]
     8/458: $0\rvfi_mem_rdata[31:0]
     9/458: $0\rvfi_mem_addr[31:0]
    10/458: $0\rvfi_csr_custom_ro_wdata[31:0]
    11/458: $0\rvfi_csr_custom_ro_rdata[31:0]
    12/458: $0\rvfi_csr_custom_ro_wmask[31:0]
    13/458: $0\rvfi_csr_custom_ro_rmask[31:0]
    14/458: $0\rvfi_csr_custom_wdata[31:0]
    15/458: $0\rvfi_csr_custom_rdata[31:0]
    16/458: $0\rvfi_csr_custom_wmask[31:0]
    17/458: $0\rvfi_csr_custom_rmask[31:0]
    18/458: $0\rvfi_csr_mhpmevent31_wdata[31:0]
    19/458: $0\rvfi_csr_mhpmevent31_rdata[31:0]
    20/458: $0\rvfi_csr_mhpmevent31_wmask[31:0]
    21/458: $0\rvfi_csr_mhpmevent31_rmask[31:0]
    22/458: $0\rvfi_csr_mhpmevent30_wdata[31:0]
    23/458: $0\rvfi_csr_mhpmevent30_rdata[31:0]
    24/458: $0\rvfi_csr_mhpmevent30_wmask[31:0]
    25/458: $0\rvfi_csr_mhpmevent30_rmask[31:0]
    26/458: $0\rvfi_csr_mhpmevent29_wdata[31:0]
    27/458: $0\rvfi_csr_mhpmevent29_rdata[31:0]
    28/458: $0\rvfi_csr_mhpmevent29_wmask[31:0]
    29/458: $0\rvfi_csr_mhpmevent29_rmask[31:0]
    30/458: $0\rvfi_csr_mhpmevent28_wdata[31:0]
    31/458: $0\rvfi_csr_mhpmevent28_rdata[31:0]
    32/458: $0\rvfi_csr_mhpmevent28_wmask[31:0]
    33/458: $0\rvfi_csr_mhpmevent28_rmask[31:0]
    34/458: $0\rvfi_csr_mhpmevent27_wdata[31:0]
    35/458: $0\rvfi_csr_mhpmevent27_rdata[31:0]
    36/458: $0\rvfi_csr_mhpmevent27_wmask[31:0]
    37/458: $0\rvfi_csr_mhpmevent27_rmask[31:0]
    38/458: $0\rvfi_csr_mhpmevent26_wdata[31:0]
    39/458: $0\rvfi_csr_mhpmevent26_rdata[31:0]
    40/458: $0\rvfi_csr_mhpmevent26_wmask[31:0]
    41/458: $0\rvfi_csr_mhpmevent26_rmask[31:0]
    42/458: $0\rvfi_csr_mhpmevent25_wdata[31:0]
    43/458: $0\rvfi_csr_mhpmevent25_rdata[31:0]
    44/458: $0\rvfi_csr_mhpmevent25_wmask[31:0]
    45/458: $0\rvfi_csr_mhpmevent25_rmask[31:0]
    46/458: $0\rvfi_csr_mhpmevent24_wdata[31:0]
    47/458: $0\rvfi_csr_mhpmevent24_rdata[31:0]
    48/458: $0\rvfi_csr_mhpmevent24_wmask[31:0]
    49/458: $0\rvfi_csr_mhpmevent24_rmask[31:0]
    50/458: $0\rvfi_csr_mhpmevent23_wdata[31:0]
    51/458: $0\rvfi_csr_mhpmevent23_rdata[31:0]
    52/458: $0\rvfi_csr_mhpmevent23_wmask[31:0]
    53/458: $0\rvfi_csr_mhpmevent23_rmask[31:0]
    54/458: $0\rvfi_csr_mhpmevent22_wdata[31:0]
    55/458: $0\rvfi_csr_mhpmevent22_rdata[31:0]
    56/458: $0\rvfi_csr_mhpmevent22_wmask[31:0]
    57/458: $0\rvfi_csr_mhpmevent22_rmask[31:0]
    58/458: $0\rvfi_csr_mhpmevent21_wdata[31:0]
    59/458: $0\rvfi_csr_mhpmevent21_rdata[31:0]
    60/458: $0\rvfi_csr_mhpmevent21_wmask[31:0]
    61/458: $0\rvfi_csr_mhpmevent21_rmask[31:0]
    62/458: $0\rvfi_csr_mhpmevent20_wdata[31:0]
    63/458: $0\rvfi_csr_mhpmevent20_rdata[31:0]
    64/458: $0\rvfi_csr_mhpmevent20_wmask[31:0]
    65/458: $0\rvfi_csr_mhpmevent20_rmask[31:0]
    66/458: $0\rvfi_csr_mhpmevent19_wdata[31:0]
    67/458: $0\rvfi_csr_mhpmevent19_rdata[31:0]
    68/458: $0\rvfi_csr_mhpmevent19_wmask[31:0]
    69/458: $0\rvfi_csr_mhpmevent19_rmask[31:0]
    70/458: $0\rvfi_csr_mhpmevent18_wdata[31:0]
    71/458: $0\rvfi_csr_mhpmevent18_rdata[31:0]
    72/458: $0\rvfi_csr_mhpmevent18_wmask[31:0]
    73/458: $0\rvfi_csr_mhpmevent18_rmask[31:0]
    74/458: $0\rvfi_csr_mhpmevent17_wdata[31:0]
    75/458: $0\rvfi_csr_mhpmevent17_rdata[31:0]
    76/458: $0\rvfi_csr_mhpmevent17_wmask[31:0]
    77/458: $0\rvfi_csr_mhpmevent17_rmask[31:0]
    78/458: $0\rvfi_csr_mhpmevent16_wdata[31:0]
    79/458: $0\rvfi_csr_mhpmevent16_rdata[31:0]
    80/458: $0\rvfi_csr_mhpmevent16_wmask[31:0]
    81/458: $0\rvfi_csr_mhpmevent16_rmask[31:0]
    82/458: $0\rvfi_csr_mhpmevent15_wdata[31:0]
    83/458: $0\rvfi_csr_mhpmevent15_rdata[31:0]
    84/458: $0\rvfi_csr_mhpmevent15_wmask[31:0]
    85/458: $0\rvfi_csr_mhpmevent15_rmask[31:0]
    86/458: $0\rvfi_csr_mhpmevent14_wdata[31:0]
    87/458: $0\rvfi_csr_mhpmevent14_rdata[31:0]
    88/458: $0\rvfi_csr_mhpmevent14_wmask[31:0]
    89/458: $0\rvfi_csr_mhpmevent14_rmask[31:0]
    90/458: $0\rvfi_csr_mhpmevent13_wdata[31:0]
    91/458: $0\rvfi_csr_mhpmevent13_rdata[31:0]
    92/458: $0\rvfi_csr_mhpmevent13_wmask[31:0]
    93/458: $0\rvfi_csr_mhpmevent13_rmask[31:0]
    94/458: $0\rvfi_csr_mhpmevent12_wdata[31:0]
    95/458: $0\rvfi_csr_mhpmevent12_rdata[31:0]
    96/458: $0\rvfi_csr_mhpmevent12_wmask[31:0]
    97/458: $0\rvfi_csr_mhpmevent12_rmask[31:0]
    98/458: $0\rvfi_csr_mhpmevent11_wdata[31:0]
    99/458: $0\rvfi_csr_mhpmevent11_rdata[31:0]
   100/458: $0\rvfi_csr_mhpmevent11_wmask[31:0]
   101/458: $0\rvfi_csr_mhpmevent11_rmask[31:0]
   102/458: $0\rvfi_csr_mhpmevent10_wdata[31:0]
   103/458: $0\rvfi_csr_mhpmevent10_rdata[31:0]
   104/458: $0\rvfi_csr_mhpmevent10_wmask[31:0]
   105/458: $0\rvfi_csr_mhpmevent10_rmask[31:0]
   106/458: $0\rvfi_csr_mhpmevent9_wdata[31:0]
   107/458: $0\rvfi_csr_mhpmevent9_rdata[31:0]
   108/458: $0\rvfi_csr_mhpmevent9_wmask[31:0]
   109/458: $0\rvfi_csr_mhpmevent9_rmask[31:0]
   110/458: $0\rvfi_csr_mhpmevent8_wdata[31:0]
   111/458: $0\rvfi_csr_mhpmevent8_rdata[31:0]
   112/458: $0\rvfi_csr_mhpmevent8_wmask[31:0]
   113/458: $0\rvfi_csr_mhpmevent8_rmask[31:0]
   114/458: $0\rvfi_csr_mhpmevent7_wdata[31:0]
   115/458: $0\rvfi_csr_mhpmevent7_rdata[31:0]
   116/458: $0\rvfi_csr_mhpmevent7_wmask[31:0]
   117/458: $0\rvfi_csr_mhpmevent7_rmask[31:0]
   118/458: $0\rvfi_csr_mhpmevent6_wdata[31:0]
   119/458: $0\rvfi_csr_mhpmevent6_rdata[31:0]
   120/458: $0\rvfi_csr_mhpmevent6_wmask[31:0]
   121/458: $0\rvfi_csr_mhpmevent6_rmask[31:0]
   122/458: $0\rvfi_csr_mhpmevent5_wdata[31:0]
   123/458: $0\rvfi_csr_mhpmevent5_rdata[31:0]
   124/458: $0\rvfi_csr_mhpmevent5_wmask[31:0]
   125/458: $0\rvfi_csr_mhpmevent5_rmask[31:0]
   126/458: $0\rvfi_csr_mhpmevent4_wdata[31:0]
   127/458: $0\rvfi_csr_mhpmevent4_rdata[31:0]
   128/458: $0\rvfi_csr_mhpmevent4_wmask[31:0]
   129/458: $0\rvfi_csr_mhpmevent4_rmask[31:0]
   130/458: $0\rvfi_csr_mhpmevent3_wdata[31:0]
   131/458: $0\rvfi_csr_mhpmevent3_rdata[31:0]
   132/458: $0\rvfi_csr_mhpmevent3_wmask[31:0]
   133/458: $0\rvfi_csr_mhpmevent3_rmask[31:0]
   134/458: $0\rvfi_csr_mhpmcounter31h_wdata[31:0]
   135/458: $0\rvfi_csr_mhpmcounter31h_rdata[31:0]
   136/458: $0\rvfi_csr_mhpmcounter31h_wmask[31:0]
   137/458: $0\rvfi_csr_mhpmcounter31h_rmask[31:0]
   138/458: $0\rvfi_csr_mhpmcounter30h_wdata[31:0]
   139/458: $0\rvfi_csr_mhpmcounter30h_rdata[31:0]
   140/458: $0\rvfi_csr_mhpmcounter30h_wmask[31:0]
   141/458: $0\rvfi_csr_mhpmcounter30h_rmask[31:0]
   142/458: $0\rvfi_csr_mhpmcounter29h_wdata[31:0]
   143/458: $0\rvfi_csr_mhpmcounter29h_rdata[31:0]
   144/458: $0\rvfi_csr_mhpmcounter29h_wmask[31:0]
   145/458: $0\rvfi_csr_mhpmcounter29h_rmask[31:0]
   146/458: $0\rvfi_csr_mhpmcounter28h_wdata[31:0]
   147/458: $0\rvfi_csr_mhpmcounter28h_rdata[31:0]
   148/458: $0\rvfi_csr_mhpmcounter28h_wmask[31:0]
   149/458: $0\rvfi_csr_mhpmcounter28h_rmask[31:0]
   150/458: $0\rvfi_csr_mhpmcounter27h_wdata[31:0]
   151/458: $0\rvfi_csr_mhpmcounter27h_rdata[31:0]
   152/458: $0\rvfi_csr_mhpmcounter27h_wmask[31:0]
   153/458: $0\rvfi_csr_mhpmcounter27h_rmask[31:0]
   154/458: $0\rvfi_csr_mhpmcounter26h_wdata[31:0]
   155/458: $0\rvfi_csr_mhpmcounter26h_rdata[31:0]
   156/458: $0\rvfi_csr_mhpmcounter26h_wmask[31:0]
   157/458: $0\rvfi_csr_mhpmcounter26h_rmask[31:0]
   158/458: $0\rvfi_csr_mhpmcounter25h_wdata[31:0]
   159/458: $0\rvfi_csr_mhpmcounter25h_rdata[31:0]
   160/458: $0\rvfi_csr_mhpmcounter25h_wmask[31:0]
   161/458: $0\rvfi_csr_mhpmcounter25h_rmask[31:0]
   162/458: $0\rvfi_csr_mhpmcounter24h_wdata[31:0]
   163/458: $0\rvfi_csr_mhpmcounter24h_rdata[31:0]
   164/458: $0\rvfi_csr_mhpmcounter24h_wmask[31:0]
   165/458: $0\rvfi_csr_mhpmcounter24h_rmask[31:0]
   166/458: $0\rvfi_csr_mhpmcounter23h_wdata[31:0]
   167/458: $0\rvfi_csr_mhpmcounter23h_rdata[31:0]
   168/458: $0\rvfi_csr_mhpmcounter23h_wmask[31:0]
   169/458: $0\rvfi_csr_mhpmcounter23h_rmask[31:0]
   170/458: $0\rvfi_csr_mhpmcounter22h_wdata[31:0]
   171/458: $0\rvfi_csr_mhpmcounter22h_rdata[31:0]
   172/458: $0\rvfi_csr_mhpmcounter22h_wmask[31:0]
   173/458: $0\rvfi_csr_mhpmcounter22h_rmask[31:0]
   174/458: $0\rvfi_csr_mhpmcounter21h_wdata[31:0]
   175/458: $0\rvfi_csr_mhpmcounter21h_rdata[31:0]
   176/458: $0\rvfi_csr_mhpmcounter21h_wmask[31:0]
   177/458: $0\rvfi_csr_mhpmcounter21h_rmask[31:0]
   178/458: $0\rvfi_csr_mhpmcounter20h_wdata[31:0]
   179/458: $0\rvfi_csr_mhpmcounter20h_rdata[31:0]
   180/458: $0\rvfi_csr_mhpmcounter20h_wmask[31:0]
   181/458: $0\rvfi_csr_mhpmcounter20h_rmask[31:0]
   182/458: $0\rvfi_csr_mhpmcounter19h_wdata[31:0]
   183/458: $0\rvfi_csr_mhpmcounter19h_rdata[31:0]
   184/458: $0\rvfi_csr_mhpmcounter19h_wmask[31:0]
   185/458: $0\rvfi_csr_mhpmcounter19h_rmask[31:0]
   186/458: $0\rvfi_csr_mhpmcounter18h_wdata[31:0]
   187/458: $0\rvfi_csr_mhpmcounter18h_rdata[31:0]
   188/458: $0\rvfi_csr_mhpmcounter18h_wmask[31:0]
   189/458: $0\rvfi_csr_mhpmcounter18h_rmask[31:0]
   190/458: $0\rvfi_csr_mhpmcounter17h_wdata[31:0]
   191/458: $0\rvfi_csr_mhpmcounter17h_rdata[31:0]
   192/458: $0\rvfi_csr_mhpmcounter17h_wmask[31:0]
   193/458: $0\rvfi_csr_mhpmcounter17h_rmask[31:0]
   194/458: $0\rvfi_csr_mhpmcounter16h_wdata[31:0]
   195/458: $0\rvfi_csr_mhpmcounter16h_rdata[31:0]
   196/458: $0\rvfi_csr_mhpmcounter16h_wmask[31:0]
   197/458: $0\rvfi_csr_mhpmcounter16h_rmask[31:0]
   198/458: $0\rvfi_csr_mhpmcounter15h_wdata[31:0]
   199/458: $0\rvfi_csr_mhpmcounter15h_rdata[31:0]
   200/458: $0\rvfi_csr_mhpmcounter15h_wmask[31:0]
   201/458: $0\rvfi_csr_mhpmcounter15h_rmask[31:0]
   202/458: $0\rvfi_csr_mhpmcounter14h_wdata[31:0]
   203/458: $0\rvfi_csr_mhpmcounter14h_rdata[31:0]
   204/458: $0\rvfi_csr_mhpmcounter14h_wmask[31:0]
   205/458: $0\rvfi_csr_mhpmcounter14h_rmask[31:0]
   206/458: $0\rvfi_csr_mhpmcounter13h_wdata[31:0]
   207/458: $0\rvfi_csr_mhpmcounter13h_rdata[31:0]
   208/458: $0\rvfi_csr_mhpmcounter13h_wmask[31:0]
   209/458: $0\rvfi_csr_mhpmcounter13h_rmask[31:0]
   210/458: $0\rvfi_csr_mhpmcounter12h_wdata[31:0]
   211/458: $0\rvfi_csr_mhpmcounter12h_rdata[31:0]
   212/458: $0\rvfi_csr_mhpmcounter12h_wmask[31:0]
   213/458: $0\rvfi_csr_mhpmcounter12h_rmask[31:0]
   214/458: $0\rvfi_csr_mhpmcounter11h_wdata[31:0]
   215/458: $0\rvfi_csr_mhpmcounter11h_rdata[31:0]
   216/458: $0\rvfi_csr_mhpmcounter11h_wmask[31:0]
   217/458: $0\rvfi_csr_mhpmcounter11h_rmask[31:0]
   218/458: $0\rvfi_csr_mhpmcounter10h_wdata[31:0]
   219/458: $0\rvfi_csr_mhpmcounter10h_rdata[31:0]
   220/458: $0\rvfi_csr_mhpmcounter10h_wmask[31:0]
   221/458: $0\rvfi_csr_mhpmcounter10h_rmask[31:0]
   222/458: $0\rvfi_csr_mhpmcounter9h_wdata[31:0]
   223/458: $0\rvfi_csr_mhpmcounter9h_rdata[31:0]
   224/458: $0\rvfi_csr_mhpmcounter9h_wmask[31:0]
   225/458: $0\rvfi_csr_mhpmcounter9h_rmask[31:0]
   226/458: $0\rvfi_csr_mhpmcounter8h_wdata[31:0]
   227/458: $0\rvfi_csr_mhpmcounter8h_rdata[31:0]
   228/458: $0\rvfi_csr_mhpmcounter8h_wmask[31:0]
   229/458: $0\rvfi_csr_mhpmcounter8h_rmask[31:0]
   230/458: $0\rvfi_csr_mhpmcounter7h_wdata[31:0]
   231/458: $0\rvfi_csr_mhpmcounter7h_rdata[31:0]
   232/458: $0\rvfi_csr_mhpmcounter7h_wmask[31:0]
   233/458: $0\rvfi_csr_mhpmcounter7h_rmask[31:0]
   234/458: $0\rvfi_csr_mhpmcounter6h_wdata[31:0]
   235/458: $0\rvfi_csr_mhpmcounter6h_rdata[31:0]
   236/458: $0\rvfi_csr_mhpmcounter6h_wmask[31:0]
   237/458: $0\rvfi_csr_mhpmcounter6h_rmask[31:0]
   238/458: $0\rvfi_csr_mhpmcounter5h_wdata[31:0]
   239/458: $0\rvfi_csr_mhpmcounter5h_rdata[31:0]
   240/458: $0\rvfi_csr_mhpmcounter5h_wmask[31:0]
   241/458: $0\rvfi_csr_mhpmcounter5h_rmask[31:0]
   242/458: $0\rvfi_csr_mhpmcounter4h_wdata[31:0]
   243/458: $0\rvfi_csr_mhpmcounter4h_rdata[31:0]
   244/458: $0\rvfi_csr_mhpmcounter4h_wmask[31:0]
   245/458: $0\rvfi_csr_mhpmcounter4h_rmask[31:0]
   246/458: $0\rvfi_csr_mhpmcounter3h_wdata[31:0]
   247/458: $0\rvfi_csr_mhpmcounter3h_rdata[31:0]
   248/458: $0\rvfi_csr_mhpmcounter3h_wmask[31:0]
   249/458: $0\rvfi_csr_mhpmcounter3h_rmask[31:0]
   250/458: $0\rvfi_csr_minstreth_wdata[31:0]
   251/458: $0\rvfi_csr_minstreth_rdata[31:0]
   252/458: $0\rvfi_csr_minstreth_wmask[31:0]
   253/458: $0\rvfi_csr_minstreth_rmask[31:0]
   254/458: $0\rvfi_csr_mcycleh_wdata[31:0]
   255/458: $0\rvfi_csr_mcycleh_rdata[31:0]
   256/458: $0\rvfi_csr_mcycleh_wmask[31:0]
   257/458: $0\rvfi_csr_mcycleh_rmask[31:0]
   258/458: $0\rvfi_csr_mhpmcounter31_wdata[31:0]
   259/458: $0\rvfi_csr_mhpmcounter31_rdata[31:0]
   260/458: $0\rvfi_csr_mhpmcounter31_wmask[31:0]
   261/458: $0\rvfi_csr_mhpmcounter31_rmask[31:0]
   262/458: $0\rvfi_csr_mhpmcounter30_wdata[31:0]
   263/458: $0\rvfi_csr_mhpmcounter30_rdata[31:0]
   264/458: $0\rvfi_csr_mhpmcounter30_wmask[31:0]
   265/458: $0\rvfi_csr_mhpmcounter30_rmask[31:0]
   266/458: $0\rvfi_csr_mhpmcounter29_wdata[31:0]
   267/458: $0\rvfi_csr_mhpmcounter29_rdata[31:0]
   268/458: $0\rvfi_csr_mhpmcounter29_wmask[31:0]
   269/458: $0\rvfi_csr_mhpmcounter29_rmask[31:0]
   270/458: $0\rvfi_csr_mhpmcounter28_wdata[31:0]
   271/458: $0\rvfi_csr_mhpmcounter28_rdata[31:0]
   272/458: $0\rvfi_csr_mhpmcounter28_wmask[31:0]
   273/458: $0\rvfi_csr_mhpmcounter28_rmask[31:0]
   274/458: $0\rvfi_csr_mhpmcounter27_wdata[31:0]
   275/458: $0\rvfi_csr_mhpmcounter27_rdata[31:0]
   276/458: $0\rvfi_csr_mhpmcounter27_wmask[31:0]
   277/458: $0\rvfi_csr_mhpmcounter27_rmask[31:0]
   278/458: $0\rvfi_csr_mhpmcounter26_wdata[31:0]
   279/458: $0\rvfi_csr_mhpmcounter26_rdata[31:0]
   280/458: $0\rvfi_csr_mhpmcounter26_wmask[31:0]
   281/458: $0\rvfi_csr_mhpmcounter26_rmask[31:0]
   282/458: $0\rvfi_csr_mhpmcounter25_wdata[31:0]
   283/458: $0\rvfi_csr_mhpmcounter25_rdata[31:0]
   284/458: $0\rvfi_csr_mhpmcounter25_wmask[31:0]
   285/458: $0\rvfi_csr_mhpmcounter25_rmask[31:0]
   286/458: $0\rvfi_csr_mhpmcounter24_wdata[31:0]
   287/458: $0\rvfi_csr_mhpmcounter24_rdata[31:0]
   288/458: $0\rvfi_csr_mhpmcounter24_wmask[31:0]
   289/458: $0\rvfi_csr_mhpmcounter24_rmask[31:0]
   290/458: $0\rvfi_csr_mhpmcounter23_wdata[31:0]
   291/458: $0\rvfi_csr_mhpmcounter23_rdata[31:0]
   292/458: $0\rvfi_csr_mhpmcounter23_wmask[31:0]
   293/458: $0\rvfi_csr_mhpmcounter23_rmask[31:0]
   294/458: $0\rvfi_csr_mhpmcounter22_wdata[31:0]
   295/458: $0\rvfi_csr_mhpmcounter22_rdata[31:0]
   296/458: $0\rvfi_csr_mhpmcounter22_wmask[31:0]
   297/458: $0\rvfi_csr_mhpmcounter22_rmask[31:0]
   298/458: $0\rvfi_csr_mhpmcounter21_wdata[31:0]
   299/458: $0\rvfi_csr_mhpmcounter21_rdata[31:0]
   300/458: $0\rvfi_csr_mhpmcounter21_wmask[31:0]
   301/458: $0\rvfi_csr_mhpmcounter21_rmask[31:0]
   302/458: $0\rvfi_csr_mhpmcounter20_wdata[31:0]
   303/458: $0\rvfi_csr_mhpmcounter20_rdata[31:0]
   304/458: $0\rvfi_csr_mhpmcounter20_wmask[31:0]
   305/458: $0\rvfi_csr_mhpmcounter20_rmask[31:0]
   306/458: $0\rvfi_csr_mhpmcounter19_wdata[31:0]
   307/458: $0\rvfi_csr_mhpmcounter19_rdata[31:0]
   308/458: $0\rvfi_csr_mhpmcounter19_wmask[31:0]
   309/458: $0\rvfi_csr_mhpmcounter19_rmask[31:0]
   310/458: $0\rvfi_csr_mhpmcounter18_wdata[31:0]
   311/458: $0\rvfi_csr_mhpmcounter18_rdata[31:0]
   312/458: $0\rvfi_csr_mhpmcounter18_wmask[31:0]
   313/458: $0\rvfi_csr_mhpmcounter18_rmask[31:0]
   314/458: $0\rvfi_csr_mhpmcounter17_wdata[31:0]
   315/458: $0\rvfi_csr_mhpmcounter17_rdata[31:0]
   316/458: $0\rvfi_csr_mhpmcounter17_wmask[31:0]
   317/458: $0\rvfi_csr_mhpmcounter17_rmask[31:0]
   318/458: $0\rvfi_csr_mhpmcounter16_wdata[31:0]
   319/458: $0\rvfi_csr_mhpmcounter16_rdata[31:0]
   320/458: $0\rvfi_csr_mhpmcounter16_wmask[31:0]
   321/458: $0\rvfi_csr_mhpmcounter16_rmask[31:0]
   322/458: $0\rvfi_csr_mhpmcounter15_wdata[31:0]
   323/458: $0\rvfi_csr_mhpmcounter15_rdata[31:0]
   324/458: $0\rvfi_csr_mhpmcounter15_wmask[31:0]
   325/458: $0\rvfi_csr_mhpmcounter15_rmask[31:0]
   326/458: $0\rvfi_csr_mhpmcounter14_wdata[31:0]
   327/458: $0\rvfi_csr_mhpmcounter14_rdata[31:0]
   328/458: $0\rvfi_csr_mhpmcounter14_wmask[31:0]
   329/458: $0\rvfi_csr_mhpmcounter14_rmask[31:0]
   330/458: $0\rvfi_csr_mhpmcounter13_wdata[31:0]
   331/458: $0\rvfi_csr_mhpmcounter13_rdata[31:0]
   332/458: $0\rvfi_csr_mhpmcounter13_wmask[31:0]
   333/458: $0\rvfi_csr_mhpmcounter13_rmask[31:0]
   334/458: $0\rvfi_csr_mhpmcounter12_wdata[31:0]
   335/458: $0\rvfi_csr_mhpmcounter12_rdata[31:0]
   336/458: $0\rvfi_csr_mhpmcounter12_wmask[31:0]
   337/458: $0\rvfi_csr_mhpmcounter12_rmask[31:0]
   338/458: $0\rvfi_csr_mhpmcounter11_wdata[31:0]
   339/458: $0\rvfi_csr_mhpmcounter11_rdata[31:0]
   340/458: $0\rvfi_csr_mhpmcounter11_wmask[31:0]
   341/458: $0\rvfi_csr_mhpmcounter11_rmask[31:0]
   342/458: $0\rvfi_csr_mhpmcounter10_wdata[31:0]
   343/458: $0\rvfi_csr_mhpmcounter10_rdata[31:0]
   344/458: $0\rvfi_csr_mhpmcounter10_wmask[31:0]
   345/458: $0\rvfi_csr_mhpmcounter10_rmask[31:0]
   346/458: $0\rvfi_csr_mhpmcounter9_wdata[31:0]
   347/458: $0\rvfi_csr_mhpmcounter9_rdata[31:0]
   348/458: $0\rvfi_csr_mhpmcounter9_wmask[31:0]
   349/458: $0\rvfi_csr_mhpmcounter9_rmask[31:0]
   350/458: $0\rvfi_csr_mhpmcounter8_wdata[31:0]
   351/458: $0\rvfi_csr_mhpmcounter8_rdata[31:0]
   352/458: $0\rvfi_csr_mhpmcounter8_wmask[31:0]
   353/458: $0\rvfi_csr_mhpmcounter8_rmask[31:0]
   354/458: $0\rvfi_csr_mhpmcounter7_wdata[31:0]
   355/458: $0\rvfi_csr_mhpmcounter7_rdata[31:0]
   356/458: $0\rvfi_csr_mhpmcounter7_wmask[31:0]
   357/458: $0\rvfi_csr_mhpmcounter7_rmask[31:0]
   358/458: $0\rvfi_csr_mhpmcounter6_wdata[31:0]
   359/458: $0\rvfi_csr_mhpmcounter6_rdata[31:0]
   360/458: $0\rvfi_csr_mhpmcounter6_wmask[31:0]
   361/458: $0\rvfi_csr_mhpmcounter6_rmask[31:0]
   362/458: $0\rvfi_csr_mhpmcounter5_wdata[31:0]
   363/458: $0\rvfi_csr_mhpmcounter5_rdata[31:0]
   364/458: $0\rvfi_csr_mhpmcounter5_wmask[31:0]
   365/458: $0\rvfi_csr_mhpmcounter5_rmask[31:0]
   366/458: $0\rvfi_csr_mhpmcounter4_wdata[31:0]
   367/458: $0\rvfi_csr_mhpmcounter4_rdata[31:0]
   368/458: $0\rvfi_csr_mhpmcounter4_wmask[31:0]
   369/458: $0\rvfi_csr_mhpmcounter4_rmask[31:0]
   370/458: $0\rvfi_csr_mhpmcounter3_wdata[31:0]
   371/458: $0\rvfi_csr_mhpmcounter3_rdata[31:0]
   372/458: $0\rvfi_csr_mhpmcounter3_wmask[31:0]
   373/458: $0\rvfi_csr_mhpmcounter3_rmask[31:0]
   374/458: $0\rvfi_csr_minstret_wdata[31:0]
   375/458: $0\rvfi_csr_minstret_rdata[31:0]
   376/458: $0\rvfi_csr_minstret_wmask[31:0]
   377/458: $0\rvfi_csr_minstret_rmask[31:0]
   378/458: $0\rvfi_csr_mcycle_wdata[31:0]
   379/458: $0\rvfi_csr_mcycle_rdata[31:0]
   380/458: $0\rvfi_csr_mcycle_wmask[31:0]
   381/458: $0\rvfi_csr_mcycle_rmask[31:0]
   382/458: $0\rvfi_csr_mip_wdata[31:0]
   383/458: $0\rvfi_csr_mip_rdata[31:0]
   384/458: $0\rvfi_csr_mip_wmask[31:0]
   385/458: $0\rvfi_csr_mip_rmask[31:0]
   386/458: $0\rvfi_csr_mtval_wdata[31:0]
   387/458: $0\rvfi_csr_mtval_wmask[31:0]
   388/458: $0\rvfi_csr_mtval_rmask[31:0]
   389/458: $0\rvfi_csr_mcause_wdata[31:0]
   390/458: $0\rvfi_csr_mcause_rdata[31:0]
   391/458: $0\rvfi_csr_mcause_wmask[31:0]
   392/458: $0\rvfi_csr_mcause_rmask[31:0]
   393/458: $0\rvfi_csr_mepc_wdata[31:0]
   394/458: $0\rvfi_csr_mepc_wmask[31:0]
   395/458: $0\rvfi_csr_mepc_rmask[31:0]
   396/458: $0\rvfi_csr_mscratch_wdata[31:0]
   397/458: $0\rvfi_csr_mscratch_wmask[31:0]
   398/458: $0\rvfi_csr_mscratch_rmask[31:0]
   399/458: $0\rvfi_csr_mstatush_wdata[31:0]
   400/458: $0\rvfi_csr_mstatush_rdata[31:0]
   401/458: $0\rvfi_csr_mstatush_wmask[31:0]
   402/458: $0\rvfi_csr_mstatush_rmask[31:0]
   403/458: $0\rvfi_csr_mtvec_wdata[31:0]
   404/458: $0\rvfi_csr_mtvec_wmask[31:0]
   405/458: $0\rvfi_csr_mtvec_rmask[31:0]
   406/458: $0\rvfi_csr_mie_wdata[31:0]
   407/458: $0\rvfi_csr_mie_rdata[31:0]
   408/458: $0\rvfi_csr_mie_wmask[31:0]
   409/458: $0\rvfi_csr_mie_rmask[31:0]
   410/458: $0\rvfi_csr_misa_wdata[31:0]
   411/458: $0\rvfi_csr_misa_rdata[31:0]
   412/458: $0\rvfi_csr_misa_wmask[31:0]
   413/458: $0\rvfi_csr_misa_rmask[31:0]
   414/458: $0\rvfi_csr_mstatus_wdata[31:0]
   415/458: $0\rvfi_csr_mstatus_rdata[31:0]
   416/458: $0\rvfi_csr_mstatus_wmask[31:0]
   417/458: $0\rvfi_csr_mstatus_rmask[31:0]
   418/458: $0\rvfi_csr_mconfigptr_wdata[31:0]
   419/458: $0\rvfi_csr_mconfigptr_rdata[31:0]
   420/458: $0\rvfi_csr_mconfigptr_wmask[31:0]
   421/458: $0\rvfi_csr_mconfigptr_rmask[31:0]
   422/458: $0\rvfi_csr_mhartid_wdata[31:0]
   423/458: $0\rvfi_csr_mhartid_wmask[31:0]
   424/458: $0\rvfi_csr_mhartid_rmask[31:0]
   425/458: $0\rvfi_csr_mimpid_wdata[31:0]
   426/458: $0\rvfi_csr_mimpid_wmask[31:0]
   427/458: $0\rvfi_csr_mimpid_rmask[31:0]
   428/458: $0\rvfi_csr_marchid_wdata[31:0]
   429/458: $0\rvfi_csr_marchid_wmask[31:0]
   430/458: $0\rvfi_csr_marchid_rmask[31:0]
   431/458: $0\rvfi_csr_mvendorid_wdata[31:0]
   432/458: $0\rvfi_csr_mvendorid_wmask[31:0]
   433/458: $0\rvfi_csr_mvendorid_rmask[31:0]
   434/458: $0\rvfi_pc_wdata[31:0]
   435/458: $0\rvfi_rs2_rdata[31:0]
   436/458: $0\rvfi_rs1_rdata[31:0]
   437/458: $0\rvfi_rs2_addr[4:0]
   438/458: $0\rvfi_rs1_addr[4:0]
   439/458: $0\rvfi_ixl[1:0]
   440/458: $0\rvfi_intr[0:0]
   441/458: $0\rvfi_halt[0:0]
   442/458: $0\rvfi_order[63:0]
   443/458: $0\rvfi_csr_mepc_rdata[31:0]
   444/458: $0\rvfi_csr_mtval_rdata[31:0]
   445/458: $0\rvfi_pc_rdata[31:0]
   446/458: $0\rvfi_csr_mtvec_rdata[31:0]
   447/458: $0\rvfi_csr_mscratch_rdata[31:0]
   448/458: $0\rvfi_csr_mhartid_rdata[31:0]
   449/458: $0\rvfi_csr_mimpid_rdata[31:0]
   450/458: $0\rvfi_csr_marchid_rdata[31:0]
   451/458: $0\rvfi_csr_mvendorid_rdata[31:0]
   452/458: $0\rvfi_mode[1:0]
   453/458: $0\rvfi_rd_wdata[31:0]
   454/458: $0\rvfi_rd_addr[4:0]
   455/458: $0\rvfi_insn[31:0]
   456/458: $0\rvfi_trap[0:0]
   457/458: $0\rvfi_mem_wmask[3:0]
   458/458: $0\rvfi_mem_rmask[3:0]
Creating decoders for process `\nerv.$proc$nerv.sv:1104$758'.
     1/1: $1\mem_rdata[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:655$370'.
     1/225: $3\mem_wr_enable[0:0]
     2/225: $3\mem_rd_enable[0:0]
     3/225: $7\next_wr[0:0]
     4/225: $15\csr_mstatus_next[3:3]
     5/225: $16\csr_mstatus_next[7:7]
     6/225: $5\csr_mcause_wdata[31:0]
     7/225: $8\csr_mcause_next[31:0]
     8/225: $20\npc[31:0]
     9/225: $8\csr_mepc_next[31:2]
    10/225: $5\cycle_trap[0:0]
    11/225: $5\cycle_insn[0:0]
    12/225: $7\csr_mepc_next[31:0] [31:2]
    13/225: $7\csr_mepc_next[31:0] [1:0]
    14/225: $4\cycle_intr[0:0]
    15/225: $13\csr_mstatus_next[3:3]
    16/225: $14\csr_mstatus_next[7:7]
    17/225: $18\npc[31:0]
    18/225: $7\csr_mcause_next[31:0]
    19/225: $19\npc[31:0]
    20/225: $4\csr_mcause_wdata[31:0]
    21/225: $4\cycle_trap[0:0]
    22/225: $4\cycle_insn[0:0]
    23/225: $9\next_rd[31:0]
    24/225: $3\wr_rd[4:0]
    25/225: $3\cycle_late_wr[0:0]
    26/225: $17\npc[31:0]
    27/225: $6\csr_mcause_next[31:0]
    28/225: $3\csr_mcause_wdata[31:0]
    29/225: $6\csr_mepc_next[31:0]
    30/225: $12\csr_mstatus_next[7:7]
    31/225: $11\csr_mstatus_next[3:3]
    32/225: $3\cycle_trap[0:0]
    33/225: $3\cycle_insn[0:0]
    34/225: $3\cycle_intr[0:0]
    35/225: $16\npc[31:0]
    36/225: $5\csr_mcause_next[31:0]
    37/225: $2\csr_mcause_wdata[31:0]
    38/225: $5\csr_mepc_next[31:0]
    39/225: $10\csr_mstatus_next[7:7]
    40/225: $9\csr_mstatus_next[3:3]
    41/225: $2\cycle_late_wr[0:0]
    42/225: $2\cycle_trap[0:0]
    43/225: $2\cycle_insn[0:0]
    44/225: $2\cycle_intr[0:0]
    45/225: $2\wr_rd[4:0]
    46/225: $8\next_rd[31:0]
    47/225: $7\csr_mstatus_next[3:3]
    48/225: $15\npc[31:0]
    49/225: $4\csr_mcause_next[31:0]
    50/225: $1\csr_mcause_wdata[31:0]
    51/225: $4\csr_mepc_next[31:0]
    52/225: $8\csr_mstatus_next[7:7]
    53/225: $1\cycle_late_wr[0:0]
    54/225: $1\cycle_trap[0:0]
    55/225: $1\cycle_insn[0:0]
    56/225: $1\cycle_intr[0:0]
    57/225: $1\wr_rd[4:0]
    58/225: $7\next_rd[31:0]
    59/225: $6\next_rd[31:0]
    60/225: $6\next_wr[0:0]
    61/225: $13\illinsn[0:0]
    62/225: $5\csr_mstatus_next[3:3]
    63/225: $6\csr_mstatus_next[7:7]
    64/225: $3\csr_mcause_next[31:0]
    65/225: $14\npc[31:0]
    66/225: $3\csr_mepc_next[31:0]
    67/225: $12\illinsn[0:0]
    68/225: $2\csr_mcause_next[31:0]
    69/225: $2\csr_mepc_next[31:0]
    70/225: $4\csr_mstatus_next[7:7]
    71/225: $3\csr_mstatus_next[3:3]
    72/225: $11\illinsn[0:0]
    73/225: $13\npc[31:0]
    74/225: $5\next_rd[31:0]
    75/225: $5\next_wr[0:0]
    76/225: $4\next_rd[31:0]
    77/225: $4\next_wr[0:0]
    78/225: $10\illinsn[0:0]
    79/225: $3\next_rd[31:0]
    80/225: $3\next_wr[0:0]
    81/225: $9\illinsn[0:0]
    82/225: $3\mem_wr_strb[3:0]
    83/225: $2\mem_wr_addr[31:0]
    84/225: $2\mem_wr_strb[3:0]
    85/225: $2\mem_wr_data[31:0]
    86/225: $2\mem_wr_enable[0:0]
    87/225: $8\illinsn[0:0]
    88/225: $2\mem_rd_addr[31:0]
    89/225: $2\mem_rd_func[4:0]
    90/225: $2\mem_rd_reg[4:0]
    91/225: $2\mem_rd_enable[0:0]
    92/225: $7\illinsn[0:0]
    93/225: $12\npc[31:0]
    94/225: $6\illinsn[0:0]
    95/225: $11\npc[31:0]
    96/225: $10\npc[31:0]
    97/225: $9\npc[31:0]
    98/225: $8\npc[31:0]
    99/225: $7\npc[31:0]
   100/225: $6\npc[31:0]
   101/225: $5\npc[31:0]
   102/225: $5\illinsn[0:0]
   103/225: $4\npc[31:0]
   104/225: $4\illinsn[0:0]
   105/225: $3\npc[31:0]
   106/225: $2\next_rd[31:0]
   107/225: $2\next_wr[0:0]
   108/225: $3\illinsn[0:0]
   109/225: $2\npc[31:0]
   110/225: $2\illinsn[0:0]
   111/225: $1\next_rd[31:0]
   112/225: $1\next_wr[0:0]
   113/225: $1\csr_mcause_next[31:0]
   114/225: $1\csr_mepc_next[31:0]
   115/225: $2\csr_mstatus_next[7:7]
   116/225: $1\csr_mstatus_next[3:3]
   117/225: $1\illinsn[0:0]
   118/225: $1\npc[31:0]
   119/225: $1\mem_rd_func[4:0]
   120/225: $1\mem_rd_reg[4:0]
   121/225: $1\mem_rd_addr[31:0]
   122/225: $1\mem_rd_enable[0:0]
   123/225: $1\mem_wr_strb[3:0]
   124/225: $1\mem_wr_data[31:0]
   125/225: $1\mem_wr_addr[31:0]
   126/225: $1\mem_wr_enable[0:0]
   127/225: $32\hpm_increment[31:0]
   128/225: $32\csr_hpm_event_next[1023:992]
   129/225: $32\hpm_event[31:0]
   130/225: $31\hpm_increment[31:0]
   131/225: $31\csr_hpm_event_next[991:960]
   132/225: $31\hpm_event[31:0]
   133/225: $30\hpm_increment[31:0]
   134/225: $30\csr_hpm_event_next[959:928]
   135/225: $30\hpm_event[31:0]
   136/225: $29\hpm_increment[31:0]
   137/225: $29\csr_hpm_event_next[927:896]
   138/225: $29\hpm_event[31:0]
   139/225: $28\hpm_increment[31:0]
   140/225: $28\csr_hpm_event_next[895:864]
   141/225: $28\hpm_event[31:0]
   142/225: $27\hpm_increment[31:0]
   143/225: $27\csr_hpm_event_next[863:832]
   144/225: $27\hpm_event[31:0]
   145/225: $26\hpm_increment[31:0]
   146/225: $26\csr_hpm_event_next[831:800]
   147/225: $26\hpm_event[31:0]
   148/225: $25\hpm_increment[31:0]
   149/225: $25\csr_hpm_event_next[799:768]
   150/225: $25\hpm_event[31:0]
   151/225: $24\hpm_increment[31:0]
   152/225: $24\csr_hpm_event_next[767:736]
   153/225: $24\hpm_event[31:0]
   154/225: $23\hpm_increment[31:0]
   155/225: $23\csr_hpm_event_next[735:704]
   156/225: $23\hpm_event[31:0]
   157/225: $22\hpm_increment[31:0]
   158/225: $22\csr_hpm_event_next[703:672]
   159/225: $22\hpm_event[31:0]
   160/225: $21\hpm_increment[31:0]
   161/225: $21\csr_hpm_event_next[671:640]
   162/225: $21\hpm_event[31:0]
   163/225: $20\hpm_increment[31:0]
   164/225: $20\csr_hpm_event_next[639:608]
   165/225: $20\hpm_event[31:0]
   166/225: $19\hpm_increment[31:0]
   167/225: $19\csr_hpm_event_next[607:576]
   168/225: $19\hpm_event[31:0]
   169/225: $18\hpm_increment[31:0]
   170/225: $18\csr_hpm_event_next[575:544]
   171/225: $18\hpm_event[31:0]
   172/225: $17\hpm_increment[31:0]
   173/225: $17\csr_hpm_event_next[543:512]
   174/225: $17\hpm_event[31:0]
   175/225: $16\hpm_increment[31:0]
   176/225: $16\csr_hpm_event_next[511:480]
   177/225: $16\hpm_event[31:0]
   178/225: $15\hpm_increment[31:0]
   179/225: $15\csr_hpm_event_next[479:448]
   180/225: $15\hpm_event[31:0]
   181/225: $14\hpm_increment[31:0]
   182/225: $14\csr_hpm_event_next[447:416]
   183/225: $14\hpm_event[31:0]
   184/225: $13\hpm_increment[31:0]
   185/225: $13\csr_hpm_event_next[415:384]
   186/225: $13\hpm_event[31:0]
   187/225: $12\hpm_increment[31:0]
   188/225: $12\csr_hpm_event_next[383:352]
   189/225: $12\hpm_event[31:0]
   190/225: $11\hpm_increment[31:0]
   191/225: $11\csr_hpm_event_next[351:320]
   192/225: $11\hpm_event[31:0]
   193/225: $10\hpm_increment[31:0]
   194/225: $10\csr_hpm_event_next[319:288]
   195/225: $10\hpm_event[31:0]
   196/225: $9\hpm_increment[31:0]
   197/225: $9\csr_hpm_event_next[287:256]
   198/225: $9\hpm_event[31:0]
   199/225: $8\hpm_increment[31:0]
   200/225: $8\csr_hpm_event_next[255:224]
   201/225: $8\hpm_event[31:0]
   202/225: $7\hpm_increment[31:0]
   203/225: $7\csr_hpm_event_next[223:192]
   204/225: $7\hpm_event[31:0]
   205/225: $6\hpm_increment[31:0]
   206/225: $6\csr_hpm_event_next[191:160]
   207/225: $6\hpm_event[31:0]
   208/225: $5\hpm_increment[31:0]
   209/225: $5\csr_hpm_event_next[159:128]
   210/225: $5\hpm_event[31:0]
   211/225: $4\hpm_increment[31:0]
   212/225: $4\csr_hpm_event_next[127:96]
   213/225: $4\hpm_event[31:0]
   214/225: $3\hpm_increment[31:0]
   215/225: $3\csr_hpm_event_next[95:64]
   216/225: $3\hpm_event[31:0]
   217/225: $2\hpm_increment[31:0]
   218/225: $2\csr_hpm_event_next[63:32]
   219/225: $2\hpm_event[31:0]
   220/225: $1\hpm_increment[31:0]
   221/225: $1\csr_hpm_event_next[31:0]
   222/225: $1\hpm_event[31:0]
   223/225: $1\csr_next[31:0]
   224/225: $1\csr_rdval[31:0]
   225/225: $1\csr_ack[0:0]
Creating decoders for process `\nerv.$proc$nerv.sv:632$369'.
     1/19: $19\irq_num[4:0]
     2/19: $18\irq_num[4:0]
     3/19: $17\irq_num[4:0]
     4/19: $16\irq_num[4:0]
     5/19: $15\irq_num[4:0]
     6/19: $14\irq_num[4:0]
     7/19: $13\irq_num[4:0]
     8/19: $12\irq_num[4:0]
     9/19: $11\irq_num[4:0]
    10/19: $10\irq_num[4:0]
    11/19: $9\irq_num[4:0]
    12/19: $8\irq_num[4:0]
    13/19: $7\irq_num[4:0]
    14/19: $6\irq_num[4:0]
    15/19: $5\irq_num[4:0]
    16/19: $4\irq_num[4:0]
    17/19: $3\irq_num[4:0]
    18/19: $2\irq_num[4:0]
    19/19: $1\irq_num[4:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$364'.
     1/1: $0\csr_custom_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$302'.
     1/1: $0\csr_hpm_event_value[1023:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$238'.
     1/1: $0\csr_hpm_counterh_value[1023:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$174'.
     1/1: $0\csr_hpm_counter_value[1023:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$172'.
     1/1: $0\csr_mip_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$168'.
     1/1: $0\csr_mtval_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$164'.
     1/1: $0\csr_mcause_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$160'.
     1/1: $0\csr_mepc_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$156'.
     1/1: $0\csr_mscratch_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$152'.
     1/1: $0\csr_mstatush_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$148'.
     1/1: $0\csr_mtvec_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$144'.
     1/1: $0\csr_mie_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$140'.
     1/1: $0\csr_misa_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:619$136'.
     1/1: $0\csr_mstatus_value[31:0]
Creating decoders for process `\nerv.$proc$nerv.sv:438$95'.
Creating decoders for process `\nerv.$proc$nerv.sv:412$87'.
     1/4: $0\mem_wr_enable_q[0:0]
     2/4: $0\mem_rd_func_q[4:0]
     3/4: $0\mem_rd_reg_q[4:0]
     4/4: $0\mem_rd_enable_q[0:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$79'.
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
     1/1: $1\get_mem_width$func$nerv_wrapper.sv:256$6.$result[5:0]$78
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
     1/1: $1\get_mem_width$func$nerv_wrapper.sv:255$5.$result[5:0]$73
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:415$67'.
     1/1: $1\exception_pc[31:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:365$63'.
     1/1: $0\csr_mcause[31:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
     1/33: $1\i[31:0]
     2/33: $0\shadow_regfile[31][31:0]
     3/33: $0\shadow_regfile[30][31:0]
     4/33: $0\shadow_regfile[29][31:0]
     5/33: $0\shadow_regfile[28][31:0]
     6/33: $0\shadow_regfile[27][31:0]
     7/33: $0\shadow_regfile[26][31:0]
     8/33: $0\shadow_regfile[25][31:0]
     9/33: $0\shadow_regfile[24][31:0]
    10/33: $0\shadow_regfile[23][31:0]
    11/33: $0\shadow_regfile[22][31:0]
    12/33: $0\shadow_regfile[21][31:0]
    13/33: $0\shadow_regfile[20][31:0]
    14/33: $0\shadow_regfile[19][31:0]
    15/33: $0\shadow_regfile[18][31:0]
    16/33: $0\shadow_regfile[17][31:0]
    17/33: $0\shadow_regfile[16][31:0]
    18/33: $0\shadow_regfile[15][31:0]
    19/33: $0\shadow_regfile[14][31:0]
    20/33: $0\shadow_regfile[13][31:0]
    21/33: $0\shadow_regfile[12][31:0]
    22/33: $0\shadow_regfile[11][31:0]
    23/33: $0\shadow_regfile[10][31:0]
    24/33: $0\shadow_regfile[9][31:0]
    25/33: $0\shadow_regfile[8][31:0]
    26/33: $0\shadow_regfile[7][31:0]
    27/33: $0\shadow_regfile[6][31:0]
    28/33: $0\shadow_regfile[5][31:0]
    29/33: $0\shadow_regfile[4][31:0]
    30/33: $0\shadow_regfile[3][31:0]
    31/33: $0\shadow_regfile[2][31:0]
    32/33: $0\shadow_regfile[1][31:0]
    33/33: $0\shadow_regfile[0][31:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
     1/5: $0\event_valid_reg[0:0]
     2/5: $0\result_csr_mstatush[31:0]
     3/5: $0\result_csr_mie[31:0]
     4/5: $0\result_csr_mip[31:0]
     5/5: $0\result_csr_mstatus[31:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
     1/6: $0\captured_wstrb[3:0]
     2/6: $0\captured_rmask[3:0]
     3/6: $0\mem_data_reg[31:0]
     4/6: $0\mem_addr_reg[31:0]
     5/6: $0\mem_write_valid_reg[0:0]
     6/6: $0\mem_read_valid_reg[0:0]
Creating decoders for process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:128$10'.

6.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\nerv.\mem_rdata' from process `\nerv.$proc$nerv.sv:1104$758'.
No latch inferred for signal `\nerv.\mem_wr_enable' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_wr_addr' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_wr_data' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_wr_strb' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_rd_enable' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_rd_addr' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_rd_reg' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\mem_rd_func' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\npc' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\next_wr' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\next_rd' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\wr_rd' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\illinsn' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\cycle_intr' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\cycle_insn' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\cycle_trap' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\cycle_late_wr' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_ack' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_rdval' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_idx' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_increment' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_event' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mstatus_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mstatus_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_misa_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_misa_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mie_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mie_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mtvec_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mtvec_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mstatush_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mstatush_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mscratch_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mscratch_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mepc_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mepc_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mcause_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mcause_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mtval_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mtval_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mip_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_mip_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_counter_idx' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_counter_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_counter_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_counterh_idx' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_counterh_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_counterh_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\hpm_event_idx' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_event_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_hpm_event_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_custom_wdata' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\csr_custom_next' from process `\nerv.$proc$nerv.sv:655$370'.
No latch inferred for signal `\nerv.\irq_num' from process `\nerv.$proc$nerv.sv:632$369'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:256$4.$result' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:256$6.$result' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:256$6.mask' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:255$3.$result' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:255$5.$result' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
No latch inferred for signal `\nerv_extended_wrapper.\get_mem_width$func$nerv_wrapper.sv:255$5.mask' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
No latch inferred for signal `\nerv_extended_wrapper.\exception_pc' from process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:415$67'.

6.2.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\RiscvCore.\state_reg_0' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10735' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_1' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10736' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_2' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10737' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_3' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10738' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_4' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10739' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_5' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10740' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_6' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10741' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_7' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10742' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_8' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10743' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_9' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10744' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_10' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10745' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_11' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10746' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_12' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10747' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_13' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10748' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_14' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10749' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_15' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10750' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_16' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10751' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_17' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10752' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_18' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10753' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_19' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10754' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_20' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10755' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_21' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10756' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_22' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10757' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_23' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10758' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_24' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10759' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_25' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10760' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_26' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10761' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_27' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10762' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_28' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10763' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_29' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10764' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_30' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10765' with positive edge clock.
Creating register for signal `\RiscvCore.\state_reg_31' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10766' with positive edge clock.
Creating register for signal `\RiscvCore.\state_pc' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10767' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_misa' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10768' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mvendorid' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10769' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_marchid' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10770' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mimpid' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10771' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mhartid' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10772' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mstatus' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10773' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mstatush' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10774' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mscratch' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10775' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mtvec' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10776' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mcounteren' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10777' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_medeleg' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10778' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mideleg' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10779' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mip' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10780' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mie' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10781' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mepc' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10782' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mcause' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10783' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_mtval' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10784' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_cycle' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10785' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_scounteren' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10786' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_scause' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10787' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_stvec' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10788' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_sepc' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10789' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_stval' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10790' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_sscratch' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10791' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_satp' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10792' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpcfg0' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10793' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpcfg1' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10794' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpcfg2' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10795' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpcfg3' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10796' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpaddr0' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10797' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpaddr1' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10798' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpaddr2' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10799' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_pmpaddr3' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10800' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_MXLEN' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10801' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_IALIGN' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10802' with positive edge clock.
Creating register for signal `\RiscvCore.\state_csr_ILEN' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10803' with positive edge clock.
Creating register for signal `\RiscvCore.\state_internal_privilegeMode' using process `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
  created $dff cell `$procdff$10804' with positive edge clock.
Creating register for signal `\nerv.\pc' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10805' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mem_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10806' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mem_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10807' with positive edge clock.
Creating register for signal `\nerv.\rvfi_trap' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10808' with positive edge clock.
Creating register for signal `\nerv.\rvfi_valid' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10809' with positive edge clock.
Creating register for signal `\nerv.\rvfi_insn' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10810' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rd_addr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10811' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rd_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10812' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mode' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10813' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mvendorid_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10814' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_marchid_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10815' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mimpid_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10816' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhartid_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10817' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mscratch_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10818' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtvec_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10819' with positive edge clock.
Creating register for signal `\nerv.\rvfi_pc_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10820' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtval_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10821' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mepc_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10822' with positive edge clock.
Creating register for signal `\nerv.\rvfi_order' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10823' with positive edge clock.
Creating register for signal `\nerv.\rvfi_halt' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10824' with positive edge clock.
Creating register for signal `\nerv.\rvfi_intr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10825' with positive edge clock.
Creating register for signal `\nerv.\rvfi_ixl' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10826' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rs1_addr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10827' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rs2_addr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10828' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rs1_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10829' with positive edge clock.
Creating register for signal `\nerv.\rvfi_rs2_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10830' with positive edge clock.
Creating register for signal `\nerv.\rvfi_pc_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10831' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mvendorid_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10832' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mvendorid_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10833' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mvendorid_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10834' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_marchid_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10835' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_marchid_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10836' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_marchid_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10837' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mimpid_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10838' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mimpid_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10839' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mimpid_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10840' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhartid_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10841' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhartid_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10842' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhartid_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10843' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mconfigptr_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10844' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mconfigptr_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10845' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mconfigptr_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10846' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mconfigptr_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10847' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatus_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10848' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatus_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10849' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatus_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10850' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatus_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10851' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_misa_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10852' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_misa_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10853' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_misa_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10854' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_misa_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10855' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mie_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10856' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mie_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10857' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mie_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10858' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mie_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10859' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtvec_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10860' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtvec_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10861' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtvec_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10862' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatush_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10863' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatush_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10864' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatush_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10865' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mstatush_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10866' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mscratch_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10867' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mscratch_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10868' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mscratch_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10869' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mepc_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10870' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mepc_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10871' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mepc_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10872' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcause_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10873' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcause_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10874' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcause_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10875' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcause_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10876' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtval_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10877' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtval_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10878' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mtval_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10879' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mip_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10880' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mip_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10881' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mip_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10882' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mip_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10883' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycle_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10884' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycle_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10885' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycle_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10886' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycle_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10887' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstret_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10888' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstret_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10889' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstret_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10890' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstret_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10891' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10892' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10893' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10894' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10895' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10896' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10897' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10898' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10899' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10900' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10901' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10902' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10903' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10904' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10905' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10906' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10907' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10908' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10909' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10910' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10911' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10912' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10913' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10914' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10915' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10916' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10917' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10918' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10919' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10920' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10921' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10922' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10923' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10924' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10925' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10926' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10927' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10928' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10929' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10930' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10931' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10932' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10933' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10934' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10935' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10936' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10937' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10938' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10939' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10940' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10941' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10942' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10943' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10944' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10945' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10946' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10947' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10948' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10949' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10950' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10951' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10952' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10953' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10954' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10955' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10956' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10957' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10958' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10959' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10960' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10961' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10962' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10963' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10964' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10965' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10966' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10967' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10968' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10969' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10970' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10971' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10972' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10973' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10974' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10975' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10976' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10977' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10978' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10979' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10980' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10981' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10982' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10983' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10984' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10985' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10986' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10987' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10988' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10989' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10990' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10991' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10992' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10993' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10994' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10995' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10996' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10997' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10998' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$10999' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11000' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11001' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11002' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11003' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11004' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11005' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11006' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11007' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycleh_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11008' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycleh_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11009' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycleh_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11010' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mcycleh_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11011' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstreth_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11012' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstreth_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11013' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstreth_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11014' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_minstreth_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11015' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11016' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11017' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11018' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter3h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11019' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11020' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11021' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11022' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter4h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11023' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11024' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11025' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11026' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter5h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11027' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11028' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11029' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11030' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter6h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11031' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11032' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11033' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11034' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter7h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11035' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11036' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11037' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11038' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter8h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11039' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11040' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11041' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11042' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter9h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11043' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11044' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11045' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11046' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter10h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11047' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11048' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11049' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11050' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter11h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11051' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11052' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11053' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11054' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter12h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11055' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11056' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11057' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11058' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter13h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11059' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11060' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11061' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11062' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter14h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11063' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11064' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11065' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11066' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter15h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11067' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11068' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11069' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11070' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter16h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11071' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11072' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11073' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11074' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter17h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11075' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11076' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11077' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11078' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter18h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11079' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11080' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11081' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11082' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter19h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11083' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11084' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11085' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11086' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter20h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11087' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11088' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11089' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11090' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter21h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11091' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11092' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11093' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11094' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter22h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11095' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11096' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11097' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11098' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter23h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11099' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11100' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11101' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11102' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter24h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11103' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11104' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11105' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11106' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter25h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11107' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11108' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11109' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11110' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter26h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11111' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11112' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11113' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11114' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter27h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11115' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11116' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11117' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11118' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter28h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11119' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11120' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11121' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11122' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter29h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11123' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11124' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11125' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11126' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter30h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11127' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31h_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11128' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31h_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11129' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31h_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11130' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmcounter31h_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11131' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent3_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11132' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent3_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11133' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent3_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11134' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent3_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11135' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent4_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11136' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent4_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11137' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent4_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11138' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent4_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11139' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent5_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11140' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent5_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11141' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent5_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11142' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent5_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11143' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent6_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11144' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent6_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11145' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent6_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11146' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent6_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11147' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent7_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11148' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent7_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11149' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent7_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11150' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent7_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11151' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent8_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11152' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent8_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11153' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent8_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11154' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent8_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11155' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent9_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11156' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent9_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11157' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent9_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11158' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent9_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11159' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent10_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11160' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent10_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11161' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent10_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11162' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent10_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11163' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent11_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11164' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent11_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11165' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent11_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11166' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent11_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11167' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent12_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11168' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent12_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11169' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent12_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11170' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent12_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11171' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent13_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11172' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent13_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11173' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent13_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11174' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent13_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11175' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent14_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11176' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent14_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11177' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent14_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11178' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent14_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11179' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent15_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11180' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent15_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11181' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent15_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11182' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent15_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11183' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent16_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11184' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent16_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11185' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent16_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11186' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent16_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11187' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent17_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11188' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent17_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11189' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent17_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11190' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent17_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11191' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent18_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11192' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent18_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11193' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent18_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11194' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent18_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11195' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent19_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11196' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent19_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11197' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent19_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11198' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent19_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11199' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent20_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11200' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent20_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11201' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent20_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11202' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent20_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11203' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent21_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11204' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent21_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11205' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent21_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11206' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent21_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11207' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent22_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11208' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent22_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11209' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent22_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11210' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent22_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11211' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent23_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11212' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent23_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11213' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent23_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11214' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent23_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11215' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent24_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11216' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent24_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11217' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent24_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11218' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent24_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11219' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent25_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11220' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent25_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11221' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent25_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11222' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent25_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11223' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent26_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11224' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent26_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11225' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent26_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11226' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent26_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11227' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent27_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11228' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent27_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11229' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent27_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11230' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent27_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11231' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent28_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11232' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent28_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11233' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent28_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11234' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent28_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11235' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent29_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11236' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent29_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11237' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent29_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11238' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent29_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11239' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent30_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11240' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent30_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11241' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent30_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11242' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent30_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11243' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent31_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11244' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent31_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11245' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent31_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11246' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_mhpmevent31_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11247' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11248' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11249' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11250' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11251' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_ro_rmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11252' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_ro_wmask' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11253' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_ro_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11254' with positive edge clock.
Creating register for signal `\nerv.\rvfi_csr_custom_ro_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11255' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mem_addr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11256' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mem_rdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11257' with positive edge clock.
Creating register for signal `\nerv.\rvfi_mem_wdata' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11258' with positive edge clock.
Creating register for signal `\nerv.\reset_q' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11259' with positive edge clock.
Creating register for signal `\nerv.\next_rvfi_intr' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11260' with positive edge clock.
Creating register for signal `\nerv.$memwr$\regfile$nerv.sv:1122$86_ADDR' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11261' with positive edge clock.
Creating register for signal `\nerv.$memwr$\regfile$nerv.sv:1122$86_DATA' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11262' with positive edge clock.
Creating register for signal `\nerv.$memwr$\regfile$nerv.sv:1122$86_EN' using process `\nerv.$proc$nerv.sv:1115$761'.
  created $dff cell `$procdff$11263' with positive edge clock.
Creating register for signal `\nerv.\csr_custom_value' using process `\nerv.$proc$nerv.sv:619$364'.
  created $dff cell `$procdff$11264' with positive edge clock.
Creating register for signal `\nerv.\csr_hpm_event_value' using process `\nerv.$proc$nerv.sv:619$302'.
  created $dff cell `$procdff$11265' with positive edge clock.
Creating register for signal `\nerv.\csr_hpm_counterh_value' using process `\nerv.$proc$nerv.sv:619$238'.
  created $dff cell `$procdff$11266' with positive edge clock.
Creating register for signal `\nerv.\csr_hpm_counter_value' using process `\nerv.$proc$nerv.sv:619$174'.
  created $dff cell `$procdff$11267' with positive edge clock.
Creating register for signal `\nerv.\csr_mip_value' using process `\nerv.$proc$nerv.sv:619$172'.
  created $dff cell `$procdff$11268' with positive edge clock.
Creating register for signal `\nerv.\csr_mtval_value' using process `\nerv.$proc$nerv.sv:619$168'.
  created $dff cell `$procdff$11269' with positive edge clock.
Creating register for signal `\nerv.\csr_mcause_value' using process `\nerv.$proc$nerv.sv:619$164'.
  created $dff cell `$procdff$11270' with positive edge clock.
Creating register for signal `\nerv.\csr_mepc_value' using process `\nerv.$proc$nerv.sv:619$160'.
  created $dff cell `$procdff$11271' with positive edge clock.
Creating register for signal `\nerv.\csr_mscratch_value' using process `\nerv.$proc$nerv.sv:619$156'.
  created $dff cell `$procdff$11272' with positive edge clock.
Creating register for signal `\nerv.\csr_mstatush_value' using process `\nerv.$proc$nerv.sv:619$152'.
  created $dff cell `$procdff$11273' with positive edge clock.
Creating register for signal `\nerv.\csr_mtvec_value' using process `\nerv.$proc$nerv.sv:619$148'.
  created $dff cell `$procdff$11274' with positive edge clock.
Creating register for signal `\nerv.\csr_mie_value' using process `\nerv.$proc$nerv.sv:619$144'.
  created $dff cell `$procdff$11275' with positive edge clock.
Creating register for signal `\nerv.\csr_misa_value' using process `\nerv.$proc$nerv.sv:619$140'.
  created $dff cell `$procdff$11276' with positive edge clock.
Creating register for signal `\nerv.\csr_mstatus_value' using process `\nerv.$proc$nerv.sv:619$136'.
  created $dff cell `$procdff$11277' with positive edge clock.
Creating register for signal `\nerv.\imem_addr_q' using process `\nerv.$proc$nerv.sv:438$95'.
  created $dff cell `$procdff$11278' with positive edge clock.
Creating register for signal `\nerv.\mem_rd_enable_q' using process `\nerv.$proc$nerv.sv:412$87'.
  created $dff cell `$procdff$11279' with positive edge clock.
Creating register for signal `\nerv.\mem_rd_reg_q' using process `\nerv.$proc$nerv.sv:412$87'.
  created $dff cell `$procdff$11280' with positive edge clock.
Creating register for signal `\nerv.\mem_rd_func_q' using process `\nerv.$proc$nerv.sv:412$87'.
  created $dff cell `$procdff$11281' with positive edge clock.
Creating register for signal `\nerv.\mem_wr_enable_q' using process `\nerv.$proc$nerv.sv:412$87'.
  created $dff cell `$procdff$11282' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\csr_mcause' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:365$63'.
  created $dff cell `$procdff$11283' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\i' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11284' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[0]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11285' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[1]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11286' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[2]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11287' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[3]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11288' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[4]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11289' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[5]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11290' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[6]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11291' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[7]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11292' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[8]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11293' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[9]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11294' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[10]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11295' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[11]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11296' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[12]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11297' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[13]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11298' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[14]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11299' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[15]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11300' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[16]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11301' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[17]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11302' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[18]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11303' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[19]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11304' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[20]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11305' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[21]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11306' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[22]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11307' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[23]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11308' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[24]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11309' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[25]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11310' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[26]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11311' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[27]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11312' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[28]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11313' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[29]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11314' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[30]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11315' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\shadow_regfile[31]' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
  created $dff cell `$procdff$11316' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\result_csr_mstatus' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
  created $dff cell `$procdff$11317' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\result_csr_mip' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
  created $dff cell `$procdff$11318' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\result_csr_mie' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
  created $dff cell `$procdff$11319' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\result_csr_mstatush' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
  created $dff cell `$procdff$11320' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\event_valid_reg' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
  created $dff cell `$procdff$11321' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\mem_read_valid_reg' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11322' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\mem_write_valid_reg' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11323' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\mem_addr_reg' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11324' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\mem_data_reg' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11325' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\captured_rmask' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11326' with positive edge clock.
Creating register for signal `\nerv_extended_wrapper.\captured_wstrb' using process `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
  created $dff cell `$procdff$11327' with positive edge clock.

6.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Found and cleaned up 59 empty switches in `\CheckerWithResult.$proc$CheckerWrapper.sv:8831$6521'.
Removing empty process `CheckerWithResult.$proc$CheckerWrapper.sv:8831$6521'.
Found and cleaned up 70 empty switches in `\RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
Removing empty process `RiscvCore.$proc$CheckerWrapper.sv:6833$6224'.
Found and cleaned up 8 empty switches in `\nerv.$proc$nerv.sv:1115$761'.
Removing empty process `nerv.$proc$nerv.sv:1115$761'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:1104$758'.
Removing empty process `nerv.$proc$nerv.sv:1104$758'.
Found and cleaned up 93 empty switches in `\nerv.$proc$nerv.sv:655$370'.
Removing empty process `nerv.$proc$nerv.sv:655$370'.
Found and cleaned up 19 empty switches in `\nerv.$proc$nerv.sv:632$369'.
Removing empty process `nerv.$proc$nerv.sv:632$369'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$364'.
Removing empty process `nerv.$proc$nerv.sv:619$364'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$302'.
Removing empty process `nerv.$proc$nerv.sv:619$302'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$238'.
Removing empty process `nerv.$proc$nerv.sv:619$238'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$174'.
Removing empty process `nerv.$proc$nerv.sv:619$174'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$172'.
Removing empty process `nerv.$proc$nerv.sv:619$172'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$168'.
Removing empty process `nerv.$proc$nerv.sv:619$168'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$164'.
Removing empty process `nerv.$proc$nerv.sv:619$164'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$160'.
Removing empty process `nerv.$proc$nerv.sv:619$160'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$156'.
Removing empty process `nerv.$proc$nerv.sv:619$156'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$152'.
Removing empty process `nerv.$proc$nerv.sv:619$152'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$148'.
Removing empty process `nerv.$proc$nerv.sv:619$148'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$144'.
Removing empty process `nerv.$proc$nerv.sv:619$144'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$140'.
Removing empty process `nerv.$proc$nerv.sv:619$140'.
Found and cleaned up 1 empty switch in `\nerv.$proc$nerv.sv:619$136'.
Removing empty process `nerv.$proc$nerv.sv:619$136'.
Removing empty process `nerv.$proc$nerv.sv:438$95'.
Found and cleaned up 2 empty switches in `\nerv.$proc$nerv.sv:412$87'.
Removing empty process `nerv.$proc$nerv.sv:412$87'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$79'.
Found and cleaned up 1 empty switch in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$74'.
Found and cleaned up 1 empty switch in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:0$69'.
Found and cleaned up 1 empty switch in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:415$67'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:415$67'.
Found and cleaned up 4 empty switches in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:365$63'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:365$63'.
Found and cleaned up 1 empty switch in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:284$62'.
Found and cleaned up 2 empty switches in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:261$57'.
Found and cleaned up 2 empty switches in `\nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:233$51'.
Removing empty process `nerv_extended_wrapper.$proc$nerv_wrapper.sv:128$10'.
Cleaned up 278 empty switches.

6.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWrapper.
Optimizing module CheckerWithResult.
<suppressed ~5 debug messages>
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
<suppressed ~229 debug messages>
Optimizing module nerv.
<suppressed ~316 debug messages>
Optimizing module nerv_extended_wrapper.
<suppressed ~38 debug messages>
Optimizing module top_formal.

6.3. Executing FUTURE pass.

6.4. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWrapper.
Optimizing module CheckerWithResult.
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
Optimizing module nerv.
Optimizing module nerv_extended_wrapper.
Optimizing module top_formal.

6.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CheckerWrapper..
Finding unused cells or wires in module \CheckerWithResult..
Finding unused cells or wires in module \RiscvCore..
Finding unused cells or wires in module \RiscvTrans..
Finding unused cells or wires in module \nerv..
Finding unused cells or wires in module \nerv_extended_wrapper..
Finding unused cells or wires in module \top_formal..
Removed 1272 unused cells and 8171 unused wires.
<suppressed ~2335 debug messages>

6.6. Executing CHECK pass (checking for obvious problems).
Checking module CheckerWithResult...
Checking module CheckerWrapper...
Checking module RiscvCore...
Checking module RiscvTrans...
Checking module nerv...
Warning: Wire nerv.\dbg_reg_x3 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [0] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [0] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [0] is used but has no driver.
Checking module nerv_extended_wrapper...
Warning: Wire nerv_extended_wrapper.\result_csr_stvec [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_stval [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_sscratch [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_sepc [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_scounteren [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_scause [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_satp [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg3 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg2 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg1 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg0 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr3 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr2 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr1 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr0 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_mideleg [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_medeleg [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_cycle [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\uut.rvfi_pc_rdata is used but has no driver.
Warning: Wire nerv_extended_wrapper.\uut.rvfi_csr_mepc_rdata is used but has no driver.
Warning: Wire nerv_extended_wrapper.\uut.rvfi_trap is used but has no driver.
Warning: Wire nerv_extended_wrapper.\clk is used but has no driver.
Checking module top_formal...
Warning: Wire top_formal.\io_mem_write_memWidth [5] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [4] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [3] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [2] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [1] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [0] is used but has no driver.
Found and reported 124 problems.

6.7. Executing OPT pass (performing simple optimizations).

6.7.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWithResult.
Optimizing module CheckerWrapper.
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
Optimizing module nerv.
Optimizing module nerv_extended_wrapper.
Optimizing module top_formal.

6.7.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CheckerWithResult'.
<suppressed ~159 debug messages>
Finding identical cells in module `\CheckerWrapper'.
Finding identical cells in module `\RiscvCore'.
Finding identical cells in module `\RiscvTrans'.
<suppressed ~3420 debug messages>
Finding identical cells in module `\nerv'.
<suppressed ~1008 debug messages>
Finding identical cells in module `\nerv_extended_wrapper'.
<suppressed ~3 debug messages>
Finding identical cells in module `\top_formal'.
Removed a total of 1530 cells.

6.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \CheckerWithResult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \CheckerWrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RiscvCore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RiscvTrans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$CheckerWrapper.sv:4888$5938.
    dead port 1/2 on $mux $ternary$CheckerWrapper.sv:4905$5940.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:5308$6046.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:5311$6049.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:5402$6104.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:5406$6107.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:612$1029.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:615$1032.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:711$1058.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:717$1064.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:726$1065.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:732$1071.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:790$1081.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:791$1082.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:796$1083.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:797$1084.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:811$1090.
    dead port 2/2 on $mux $ternary$CheckerWrapper.sv:813$1092.
Running muxtree optimizer on module \nerv..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$10000.
    dead port 1/2 on $mux $procmux$10003.
    dead port 1/2 on $mux $procmux$10006.
    dead port 1/2 on $mux $procmux$10012.
    dead port 1/2 on $mux $procmux$10015.
    dead port 1/2 on $mux $procmux$10018.
    dead port 1/2 on $mux $procmux$10021.
    dead port 1/2 on $mux $procmux$10024.
    dead port 1/2 on $mux $procmux$10027.
    dead port 1/2 on $mux $procmux$10030.
    dead port 1/2 on $mux $procmux$10033.
    dead port 1/2 on $mux $procmux$10036.
    dead port 1/2 on $mux $procmux$10039.
    dead port 1/2 on $mux $procmux$10042.
    dead port 1/2 on $mux $procmux$10045.
    dead port 1/2 on $mux $procmux$10048.
    dead port 1/2 on $mux $procmux$10051.
    dead port 1/2 on $mux $procmux$10054.
    dead port 1/2 on $mux $procmux$10057.
    dead port 1/2 on $mux $procmux$10060.
    dead port 1/2 on $mux $procmux$10066.
    dead port 1/2 on $mux $procmux$10069.
    dead port 1/2 on $mux $procmux$10072.
    dead port 1/2 on $mux $procmux$10075.
    dead port 1/2 on $mux $procmux$10078.
    dead port 1/2 on $mux $procmux$10081.
    dead port 1/2 on $mux $procmux$10084.
    dead port 1/2 on $mux $procmux$10087.
    dead port 1/2 on $mux $procmux$10090.
    dead port 1/2 on $mux $procmux$10093.
    dead port 1/2 on $mux $procmux$10096.
    dead port 1/2 on $mux $procmux$10099.
    dead port 1/2 on $mux $procmux$10102.
    dead port 1/2 on $mux $procmux$10105.
    dead port 1/2 on $mux $procmux$10108.
    dead port 1/2 on $mux $procmux$10111.
    dead port 1/2 on $mux $procmux$10117.
    dead port 1/2 on $mux $procmux$10120.
    dead port 1/2 on $mux $procmux$10123.
    dead port 1/2 on $mux $procmux$10126.
    dead port 1/2 on $mux $procmux$10129.
    dead port 1/2 on $mux $procmux$10132.
    dead port 1/2 on $mux $procmux$10135.
    dead port 1/2 on $mux $procmux$10138.
    dead port 1/2 on $mux $procmux$10141.
    dead port 1/2 on $mux $procmux$10144.
    dead port 1/2 on $mux $procmux$10147.
    dead port 1/2 on $mux $procmux$10150.
    dead port 1/2 on $mux $procmux$10153.
    dead port 1/2 on $mux $procmux$10156.
    dead port 1/2 on $mux $procmux$10159.
    dead port 1/2 on $mux $procmux$10165.
    dead port 1/2 on $mux $procmux$10168.
    dead port 1/2 on $mux $procmux$10171.
    dead port 1/2 on $mux $procmux$10174.
    dead port 1/2 on $mux $procmux$10177.
    dead port 1/2 on $mux $procmux$10180.
    dead port 1/2 on $mux $procmux$10183.
    dead port 1/2 on $mux $procmux$10186.
    dead port 1/2 on $mux $procmux$10189.
    dead port 1/2 on $mux $procmux$10192.
    dead port 1/2 on $mux $procmux$10195.
    dead port 1/2 on $mux $procmux$10198.
    dead port 1/2 on $mux $procmux$10201.
    dead port 1/2 on $mux $procmux$10204.
    dead port 1/2 on $mux $procmux$10210.
    dead port 1/2 on $mux $procmux$10213.
    dead port 1/2 on $mux $procmux$10216.
    dead port 1/2 on $mux $procmux$10219.
    dead port 1/2 on $mux $procmux$10222.
    dead port 1/2 on $mux $procmux$10225.
    dead port 1/2 on $mux $procmux$10228.
    dead port 1/2 on $mux $procmux$10231.
    dead port 1/2 on $mux $procmux$10234.
    dead port 1/2 on $mux $procmux$10237.
    dead port 1/2 on $mux $procmux$10240.
    dead port 1/2 on $mux $procmux$10243.
    dead port 1/2 on $mux $procmux$10246.
    dead port 1/2 on $mux $procmux$10252.
    dead port 1/2 on $mux $procmux$10255.
    dead port 1/2 on $mux $procmux$10258.
    dead port 1/2 on $mux $procmux$10261.
    dead port 1/2 on $mux $procmux$10264.
    dead port 1/2 on $mux $procmux$10267.
    dead port 1/2 on $mux $procmux$10270.
    dead port 1/2 on $mux $procmux$10273.
    dead port 1/2 on $mux $procmux$10276.
    dead port 1/2 on $mux $procmux$10279.
    dead port 1/2 on $mux $procmux$10282.
    dead port 1/2 on $mux $procmux$10285.
    dead port 1/2 on $mux $procmux$10291.
    dead port 1/2 on $mux $procmux$10294.
    dead port 1/2 on $mux $procmux$10297.
    dead port 1/2 on $mux $procmux$10300.
    dead port 1/2 on $mux $procmux$10303.
    dead port 1/2 on $mux $procmux$10306.
    dead port 1/2 on $mux $procmux$10309.
    dead port 1/2 on $mux $procmux$10312.
    dead port 1/2 on $mux $procmux$10315.
    dead port 1/2 on $mux $procmux$10318.
    dead port 1/2 on $mux $procmux$10321.
    dead port 1/2 on $mux $procmux$10327.
    dead port 1/2 on $mux $procmux$10330.
    dead port 1/2 on $mux $procmux$10333.
    dead port 1/2 on $mux $procmux$10336.
    dead port 1/2 on $mux $procmux$10339.
    dead port 1/2 on $mux $procmux$10342.
    dead port 1/2 on $mux $procmux$10345.
    dead port 1/2 on $mux $procmux$10348.
    dead port 1/2 on $mux $procmux$10351.
    dead port 1/2 on $mux $procmux$10354.
    dead port 1/2 on $mux $procmux$10360.
    dead port 1/2 on $mux $procmux$10363.
    dead port 1/2 on $mux $procmux$10366.
    dead port 1/2 on $mux $procmux$10369.
    dead port 1/2 on $mux $procmux$10372.
    dead port 1/2 on $mux $procmux$10375.
    dead port 1/2 on $mux $procmux$10378.
    dead port 1/2 on $mux $procmux$10381.
    dead port 1/2 on $mux $procmux$10384.
    dead port 1/2 on $mux $procmux$10390.
    dead port 1/2 on $mux $procmux$10393.
    dead port 1/2 on $mux $procmux$10396.
    dead port 1/2 on $mux $procmux$10399.
    dead port 1/2 on $mux $procmux$10402.
    dead port 1/2 on $mux $procmux$10405.
    dead port 1/2 on $mux $procmux$10408.
    dead port 1/2 on $mux $procmux$10411.
    dead port 1/2 on $mux $procmux$10417.
    dead port 1/2 on $mux $procmux$10420.
    dead port 1/2 on $mux $procmux$10423.
    dead port 1/2 on $mux $procmux$10426.
    dead port 1/2 on $mux $procmux$10429.
    dead port 1/2 on $mux $procmux$10432.
    dead port 1/2 on $mux $procmux$10435.
    dead port 1/2 on $mux $procmux$10441.
    dead port 1/2 on $mux $procmux$10444.
    dead port 1/2 on $mux $procmux$10447.
    dead port 1/2 on $mux $procmux$10450.
    dead port 1/2 on $mux $procmux$10453.
    dead port 1/2 on $mux $procmux$10456.
    dead port 1/2 on $mux $procmux$10462.
    dead port 1/2 on $mux $procmux$10465.
    dead port 1/2 on $mux $procmux$10468.
    dead port 1/2 on $mux $procmux$10471.
    dead port 1/2 on $mux $procmux$10474.
    dead port 1/2 on $mux $procmux$10480.
    dead port 1/2 on $mux $procmux$10483.
    dead port 1/2 on $mux $procmux$10486.
    dead port 1/2 on $mux $procmux$10489.
    dead port 1/2 on $mux $procmux$10495.
    dead port 1/2 on $mux $procmux$10498.
    dead port 1/2 on $mux $procmux$10501.
    dead port 1/2 on $mux $procmux$10507.
    dead port 1/2 on $mux $procmux$10510.
    dead port 1/2 on $mux $procmux$10516.
    dead port 1/2 on $mux $procmux$7990.
    dead port 1/2 on $mux $procmux$7993.
    dead port 1/2 on $mux $procmux$7996.
    dead port 1/2 on $mux $procmux$7999.
    dead port 1/2 on $mux $procmux$8005.
    dead port 1/2 on $mux $procmux$8008.
    dead port 1/2 on $mux $procmux$8011.
    dead port 1/2 on $mux $procmux$8014.
    dead port 1/2 on $mux $procmux$8020.
    dead port 1/2 on $mux $procmux$8023.
    dead port 1/2 on $mux $procmux$8026.
    dead port 1/2 on $mux $procmux$8029.
    dead port 1/2 on $mux $procmux$8035.
    dead port 1/2 on $mux $procmux$8038.
    dead port 1/2 on $mux $procmux$8041.
    dead port 1/2 on $mux $procmux$8044.
    dead port 1/2 on $mux $procmux$8050.
    dead port 1/2 on $mux $procmux$8053.
    dead port 1/2 on $mux $procmux$8056.
    dead port 1/2 on $mux $procmux$8059.
    dead port 1/2 on $mux $procmux$8065.
    dead port 1/2 on $mux $procmux$8068.
    dead port 1/2 on $mux $procmux$8071.
    dead port 1/2 on $mux $procmux$8074.
    dead port 1/2 on $mux $procmux$8080.
    dead port 1/2 on $mux $procmux$8083.
    dead port 1/2 on $mux $procmux$8086.
    dead port 1/2 on $mux $procmux$8089.
    dead port 1/2 on $mux $procmux$8095.
    dead port 1/2 on $mux $procmux$8098.
    dead port 1/2 on $mux $procmux$8101.
    dead port 1/2 on $mux $procmux$8104.
    dead port 1/2 on $mux $procmux$8110.
    dead port 1/2 on $mux $procmux$8113.
    dead port 1/2 on $mux $procmux$8116.
    dead port 1/2 on $mux $procmux$8122.
    dead port 1/2 on $mux $procmux$8125.
    dead port 1/2 on $mux $procmux$8128.
    dead port 1/2 on $mux $procmux$8134.
    dead port 1/2 on $mux $procmux$8137.
    dead port 1/2 on $mux $procmux$8140.
    dead port 1/2 on $mux $procmux$8146.
    dead port 1/2 on $mux $procmux$8149.
    dead port 1/2 on $mux $procmux$8152.
    dead port 1/2 on $mux $procmux$8158.
    dead port 1/2 on $mux $procmux$8161.
    dead port 1/2 on $mux $procmux$8164.
    dead port 1/2 on $mux $procmux$8170.
    dead port 1/2 on $mux $procmux$8173.
    dead port 1/2 on $mux $procmux$8176.
    dead port 1/2 on $mux $procmux$8182.
    dead port 1/2 on $mux $procmux$8185.
    dead port 1/2 on $mux $procmux$8188.
    dead port 2/2 on $mux $procmux$8194.
    dead port 1/2 on $mux $procmux$8197.
    dead port 1/2 on $mux $procmux$8200.
    dead port 1/2 on $mux $procmux$8203.
    dead port 1/2 on $mux $procmux$8209.
    dead port 1/2 on $mux $procmux$8212.
    dead port 1/2 on $mux $procmux$8215.
    dead port 1/2 on $mux $procmux$8221.
    dead port 1/2 on $mux $procmux$8224.
    dead port 1/2 on $mux $procmux$8227.
    dead port 1/2 on $mux $procmux$8233.
    dead port 1/2 on $mux $procmux$8236.
    dead port 1/2 on $mux $procmux$8239.
    dead port 1/2 on $mux $procmux$8245.
    dead port 1/2 on $mux $procmux$8248.
    dead port 1/2 on $mux $procmux$8254.
    dead port 1/2 on $mux $procmux$8257.
    dead port 1/2 on $mux $procmux$8263.
    dead port 1/2 on $mux $procmux$8266.
    dead port 1/2 on $mux $procmux$8272.
    dead port 1/2 on $mux $procmux$8275.
    dead port 1/2 on $mux $procmux$8281.
    dead port 1/2 on $mux $procmux$8284.
    dead port 1/2 on $mux $procmux$8290.
    dead port 1/2 on $mux $procmux$8293.
    dead port 1/2 on $mux $procmux$8299.
    dead port 1/2 on $mux $procmux$8302.
    dead port 1/2 on $mux $procmux$8308.
    dead port 1/2 on $mux $procmux$8311.
    dead port 1/2 on $mux $procmux$8317.
    dead port 1/2 on $mux $procmux$8320.
    dead port 1/2 on $mux $procmux$8326.
    dead port 1/2 on $mux $procmux$8329.
    dead port 1/2 on $mux $procmux$8335.
    dead port 1/2 on $mux $procmux$8338.
    dead port 1/2 on $mux $procmux$8344.
    dead port 1/2 on $mux $procmux$8347.
    dead port 1/2 on $mux $procmux$8353.
    dead port 1/2 on $mux $procmux$8359.
    dead port 1/2 on $mux $procmux$8365.
    dead port 1/2 on $mux $procmux$8371.
    dead port 1/2 on $mux $procmux$8377.
    dead port 1/2 on $mux $procmux$8383.
    dead port 1/2 on $mux $procmux$8389.
    dead port 1/2 on $mux $procmux$8395.
    dead port 1/2 on $mux $procmux$8401.
    dead port 1/2 on $mux $procmux$8407.
    dead port 1/2 on $mux $procmux$8413.
    dead port 1/2 on $mux $procmux$8419.
    dead port 1/2 on $mux $procmux$8422.
    dead port 1/2 on $mux $procmux$8428.
    dead port 1/2 on $mux $procmux$8434.
    dead port 1/2 on $mux $procmux$8437.
    dead port 1/2 on $mux $procmux$8462.
    dead port 2/2 on $mux $procmux$8464.
    dead port 1/2 on $mux $procmux$8471.
    dead port 2/2 on $mux $procmux$8473.
    dead port 1/2 on $mux $procmux$8480.
    dead port 2/2 on $mux $procmux$8482.
    dead port 2/2 on $mux $procmux$8492.
    dead port 2/2 on $mux $procmux$8494.
    dead port 2/2 on $mux $procmux$8504.
    dead port 2/2 on $mux $procmux$8506.
    dead port 2/2 on $mux $procmux$8516.
    dead port 2/2 on $mux $procmux$8518.
    dead port 2/2 on $mux $procmux$8528.
    dead port 2/2 on $mux $procmux$8530.
    dead port 2/2 on $mux $procmux$8540.
    dead port 2/2 on $mux $procmux$8542.
    dead port 2/2 on $mux $procmux$8552.
    dead port 2/2 on $mux $procmux$8554.
    dead port 2/2 on $mux $procmux$8560.
    dead port 2/2 on $mux $procmux$8566.
    dead port 2/2 on $mux $procmux$8572.
    dead port 2/2 on $mux $procmux$8578.
    dead port 2/2 on $mux $procmux$8584.
    dead port 2/2 on $mux $procmux$8590.
    dead port 2/2 on $mux $procmux$8596.
    dead port 2/2 on $mux $procmux$8602.
    dead port 2/2 on $mux $procmux$8618.
    dead port 2/2 on $mux $procmux$8634.
    dead port 2/2 on $mux $procmux$8650.
    dead port 2/2 on $mux $procmux$8666.
    dead port 2/2 on $mux $procmux$8682.
    dead port 2/2 on $mux $procmux$8698.
    dead port 2/2 on $mux $procmux$8721.
    dead port 2/2 on $mux $procmux$8730.
    dead port 2/2 on $mux $procmux$8739.
    dead port 2/2 on $mux $procmux$8748.
    dead port 2/2 on $mux $procmux$8757.
    dead port 2/2 on $mux $procmux$8767.
    dead port 2/2 on $mux $procmux$8777.
    dead port 2/2 on $mux $procmux$8787.
    dead port 2/2 on $mux $procmux$8797.
    dead port 2/2 on $mux $procmux$8807.
    dead port 2/2 on $mux $procmux$8818.
    dead port 2/2 on $mux $procmux$8829.
    dead port 2/2 on $mux $procmux$8841.
    dead port 2/2 on $mux $procmux$8843.
    dead port 2/2 on $mux $procmux$8856.
    dead port 2/2 on $mux $procmux$8858.
    dead port 2/2 on $mux $procmux$8872.
    dead port 2/2 on $mux $procmux$8874.
    dead port 2/2 on $mux $procmux$8889.
    dead port 2/2 on $mux $procmux$8891.
    dead port 2/2 on $mux $procmux$8907.
    dead port 2/2 on $mux $procmux$8909.
    dead port 2/2 on $mux $procmux$8926.
    dead port 2/2 on $mux $procmux$8928.
    dead port 2/2 on $mux $procmux$8960.
    dead port 2/2 on $mux $procmux$8972.
    dead port 2/2 on $mux $procmux$8984.
    dead port 2/2 on $mux $procmux$9008.
    dead port 2/2 on $mux $procmux$9020.
    dead port 2/2 on $mux $procmux$9032.
    dead port 2/2 on $mux $procmux$9045.
    dead port 2/2 on $mux $procmux$9058.
    dead port 1/4 on $pmux $procmux$9480.
    dead port 3/4 on $pmux $procmux$9480.
    dead port 4/4 on $pmux $procmux$9480.
    dead port 1/4 on $pmux $procmux$9485.
    dead port 3/4 on $pmux $procmux$9485.
    dead port 4/4 on $pmux $procmux$9485.
    dead port 1/4 on $pmux $procmux$9502.
    dead port 2/4 on $pmux $procmux$9502.
    dead port 4/4 on $pmux $procmux$9502.
    dead port 1/4 on $pmux $procmux$9507.
    dead port 2/4 on $pmux $procmux$9507.
    dead port 4/4 on $pmux $procmux$9507.
    dead port 1/2 on $mux $procmux$9955.
    dead port 1/2 on $mux $procmux$9958.
    dead port 1/2 on $mux $procmux$9961.
    dead port 1/2 on $mux $procmux$9964.
    dead port 1/2 on $mux $procmux$9967.
    dead port 1/2 on $mux $procmux$9970.
    dead port 1/2 on $mux $procmux$9973.
    dead port 1/2 on $mux $procmux$9976.
    dead port 1/2 on $mux $procmux$9979.
    dead port 1/2 on $mux $procmux$9982.
    dead port 1/2 on $mux $procmux$9985.
    dead port 1/2 on $mux $procmux$9988.
    dead port 1/2 on $mux $procmux$9991.
    dead port 1/2 on $mux $procmux$9994.
    dead port 1/2 on $mux $procmux$9997.
    dead port 1/2 on $mux $ternary$nerv.sv:759$590.
    dead port 2/2 on $mux $ternary$nerv.sv:759$590.
    dead port 1/2 on $mux $ternary$nerv.sv:760$591.
    dead port 2/2 on $mux $ternary$nerv.sv:760$591.
    dead port 1/2 on $mux $ternary$nerv.sv:760$597.
    dead port 2/2 on $mux $ternary$nerv.sv:760$597.
Running muxtree optimizer on module \nerv_extended_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $ternary$nerv_wrapper.sv:417$68.
Running muxtree optimizer on module \top_formal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 378 multiplexer ports.
<suppressed ~4071 debug messages>

6.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \CheckerWithResult.
  Optimizing cells in module \CheckerWrapper.
  Optimizing cells in module \RiscvCore.
  Optimizing cells in module \RiscvTrans.
  Optimizing cells in module \RiscvTrans.
  Optimizing cells in module \nerv.
    Consolidated identical input bits for $mux cell $procmux$7026:
      Old ports: A=0, B=32'11111111111111111111111111111111, Y=$0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764
      New ports: A=1'0, B=1'1, Y=$0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0]
      New connections: $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [31:1] = { $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] $0$memwr$\regfile$nerv.sv:1122$86_EN[31:0]$764 [0] }
    New ctrl vector for $pmux cell $procmux$7961: { $procmux$7964_CMP $auto$opt_reduce.cc:134:opt_pmux$11332 $auto$opt_reduce.cc:134:opt_pmux$11330 }
    New ctrl vector for $pmux cell $procmux$8488: { $auto$opt_reduce.cc:134:opt_pmux$11334 $procmux$8489_CMP }
    New ctrl vector for $pmux cell $procmux$8501: $auto$opt_reduce.cc:134:opt_pmux$11336
    New ctrl vector for $pmux cell $procmux$8524: { $auto$opt_reduce.cc:134:opt_pmux$11338 $procmux$8489_CMP }
    New ctrl vector for $pmux cell $procmux$8537: $auto$opt_reduce.cc:134:opt_pmux$11340
    New ctrl vector for $pmux cell $procmux$8547: $auto$opt_reduce.cc:134:opt_pmux$11342
    New ctrl vector for $pmux cell $procmux$8623: $auto$opt_reduce.cc:134:opt_pmux$11344
    New ctrl vector for $pmux cell $procmux$8639: $auto$opt_reduce.cc:134:opt_pmux$11346
    New ctrl vector for $pmux cell $procmux$8672: $auto$opt_reduce.cc:134:opt_pmux$11348
    New ctrl vector for $pmux cell $procmux$8688: $auto$opt_reduce.cc:134:opt_pmux$11350
    New ctrl vector for $pmux cell $procmux$8953: $auto$opt_reduce.cc:134:opt_pmux$11352
    New ctrl vector for $pmux cell $procmux$9070: { $auto$opt_reduce.cc:134:opt_pmux$11354 $procmux$8973_CMP $procmux$8667_CMP $procmux$8619_CMP $eq$nerv.sv:568$115_Y }
    New ctrl vector for $pmux cell $procmux$9091: { $auto$opt_reduce.cc:134:opt_pmux$11356 $procmux$9046_CMP $procmux$8973_CMP $procmux$8819_CMP $procmux$8768_CMP $procmux$8713_CMP $procmux$8667_CMP $procmux$8619_CMP $eq$nerv.sv:568$115_Y }
    New ctrl vector for $pmux cell $procmux$9166: $auto$opt_reduce.cc:134:opt_pmux$11358
    New ctrl vector for $pmux cell $procmux$9177: $auto$opt_reduce.cc:134:opt_pmux$11360
    New ctrl vector for $pmux cell $procmux$9188: $auto$opt_reduce.cc:134:opt_pmux$11362
    New ctrl vector for $pmux cell $procmux$9199: $auto$opt_reduce.cc:134:opt_pmux$11364
    New ctrl vector for $pmux cell $procmux$9210: $auto$opt_reduce.cc:134:opt_pmux$11366
    New ctrl vector for $pmux cell $procmux$9221: $auto$opt_reduce.cc:134:opt_pmux$11368
    New ctrl vector for $pmux cell $procmux$9232: $auto$opt_reduce.cc:134:opt_pmux$11370
    New ctrl vector for $pmux cell $procmux$9243: $auto$opt_reduce.cc:134:opt_pmux$11372
    New ctrl vector for $pmux cell $procmux$9254: $auto$opt_reduce.cc:134:opt_pmux$11374
    New ctrl vector for $pmux cell $procmux$9265: $auto$opt_reduce.cc:134:opt_pmux$11376
    New ctrl vector for $pmux cell $procmux$9276: $auto$opt_reduce.cc:134:opt_pmux$11378
    New ctrl vector for $pmux cell $procmux$9287: $auto$opt_reduce.cc:134:opt_pmux$11380
    New ctrl vector for $pmux cell $procmux$9298: $auto$opt_reduce.cc:134:opt_pmux$11382
    New ctrl vector for $pmux cell $procmux$9309: $auto$opt_reduce.cc:134:opt_pmux$11384
    New ctrl vector for $pmux cell $procmux$9320: $auto$opt_reduce.cc:134:opt_pmux$11386
    New ctrl vector for $pmux cell $procmux$9331: $auto$opt_reduce.cc:134:opt_pmux$11388
    New ctrl vector for $pmux cell $procmux$9342: $auto$opt_reduce.cc:134:opt_pmux$11390
    New ctrl vector for $pmux cell $procmux$9353: $auto$opt_reduce.cc:134:opt_pmux$11392
    New ctrl vector for $pmux cell $procmux$9364: $auto$opt_reduce.cc:134:opt_pmux$11394
    New ctrl vector for $pmux cell $procmux$9375: $auto$opt_reduce.cc:134:opt_pmux$11396
    New ctrl vector for $pmux cell $procmux$9386: $auto$opt_reduce.cc:134:opt_pmux$11398
    New ctrl vector for $pmux cell $procmux$9397: $auto$opt_reduce.cc:134:opt_pmux$11400
    New ctrl vector for $pmux cell $procmux$9408: $auto$opt_reduce.cc:134:opt_pmux$11402
    New ctrl vector for $pmux cell $procmux$9419: $auto$opt_reduce.cc:134:opt_pmux$11404
    New ctrl vector for $pmux cell $procmux$9430: $auto$opt_reduce.cc:134:opt_pmux$11406
    New ctrl vector for $pmux cell $procmux$9441: $auto$opt_reduce.cc:134:opt_pmux$11408
    New ctrl vector for $pmux cell $procmux$9452: $auto$opt_reduce.cc:134:opt_pmux$11410
    New ctrl vector for $pmux cell $procmux$9463: $auto$opt_reduce.cc:134:opt_pmux$11412
    New ctrl vector for $pmux cell $procmux$9474: $auto$opt_reduce.cc:134:opt_pmux$11414
    New ctrl vector for $pmux cell $procmux$9496: $auto$opt_reduce.cc:134:opt_pmux$11416
  Optimizing cells in module \nerv.
  Optimizing cells in module \nerv_extended_wrapper.
  Optimizing cells in module \top_formal.
Performed a total of 57 changes.

6.7.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CheckerWithResult'.
<suppressed ~162 debug messages>
Finding identical cells in module `\CheckerWrapper'.
Finding identical cells in module `\RiscvCore'.
Finding identical cells in module `\RiscvTrans'.
<suppressed ~9 debug messages>
Finding identical cells in module `\nerv'.
<suppressed ~192 debug messages>
Finding identical cells in module `\nerv_extended_wrapper'.
<suppressed ~81 debug messages>
Finding identical cells in module `\top_formal'.
Removed a total of 148 cells.

6.7.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CheckerWithResult..
Finding unused cells or wires in module \CheckerWrapper..
Finding unused cells or wires in module \RiscvCore..
Finding unused cells or wires in module \RiscvTrans..
Finding unused cells or wires in module \nerv..
Finding unused cells or wires in module \nerv_extended_wrapper..
Finding unused cells or wires in module \top_formal..
Removed 0 unused cells and 2003 unused wires.
<suppressed ~14 debug messages>

6.7.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWithResult.
Optimizing module CheckerWrapper.
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
Optimizing module nerv.
Optimizing module nerv_extended_wrapper.
Optimizing module top_formal.

6.7.8. Rerunning OPT passes. (Maybe there is more to do..)

6.7.9. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \CheckerWithResult..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \CheckerWrapper..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \RiscvCore..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \RiscvTrans..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nerv..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \nerv_extended_wrapper..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \top_formal..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~3980 debug messages>

6.7.10. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \CheckerWithResult.
  Optimizing cells in module \CheckerWrapper.
  Optimizing cells in module \RiscvCore.
  Optimizing cells in module \RiscvTrans.
  Optimizing cells in module \nerv.
  Optimizing cells in module \nerv_extended_wrapper.
  Optimizing cells in module \top_formal.
Performed a total of 0 changes.

6.7.11. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CheckerWithResult'.
Finding identical cells in module `\CheckerWrapper'.
Finding identical cells in module `\RiscvCore'.
Finding identical cells in module `\RiscvTrans'.
Finding identical cells in module `\nerv'.
Finding identical cells in module `\nerv_extended_wrapper'.
Finding identical cells in module `\top_formal'.
Removed a total of 0 cells.

6.7.12. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CheckerWithResult..
Finding unused cells or wires in module \CheckerWrapper..
Finding unused cells or wires in module \RiscvCore..
Finding unused cells or wires in module \RiscvTrans..
Finding unused cells or wires in module \nerv..
Finding unused cells or wires in module \nerv_extended_wrapper..
Finding unused cells or wires in module \top_formal..

6.7.13. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWithResult.
Optimizing module CheckerWrapper.
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
Optimizing module nerv.
Optimizing module nerv_extended_wrapper.
Optimizing module top_formal.

6.7.14. Finished OPT passes. (There is nothing left to do.)

6.8. Executing WREDUCE pass (reducing word size of cells).
Removed top 3 bits (of 22) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:179$791 ($eq).
Removed top 3 bits (of 32) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:183$792 ($eq).
Removed top 2 bits (of 32) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:187$793 ($eq).
Removed top 3 bits (of 32) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:191$794 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:195$796 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:200$798 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:205$800 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:210$802 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:215$804 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:220$806 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:225$808 ($eq).
Removed top 6 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:230$810 ($eq).
Removed top 6 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:235$812 ($eq).
Removed top 25 bits (of 32) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:239$813 ($eq).
Removed top 11 bits (of 32) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:243$814 ($eq).
Removed top 1 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:247$816 ($eq).
Removed top 2 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:252$818 ($eq).
Removed top 4 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:257$820 ($eq).
Removed top 1 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:268$824 ($eq).
Removed top 2 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:272$826 ($eq).
Removed top 8 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:276$828 ($eq).
Removed top 2 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:304$838 ($eq).
Removed top 3 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:310$840 ($eq).
Removed top 3 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:316$842 ($eq).
Removed top 1 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:320$844 ($eq).
Removed top 1 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:325$846 ($eq).
Removed top 7 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:330$848 ($eq).
Removed top 9 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:335$850 ($eq).
Removed top 7 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:340$852 ($eq).
Removed top 7 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:345$854 ($eq).
Removed top 7 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:350$856 ($eq).
Removed top 8 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:355$858 ($eq).
Removed top 8 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:360$860 ($eq).
Removed top 11 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:365$862 ($eq).
Removed top 1 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:370$864 ($eq).
Removed top 7 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:374$866 ($eq).
Removed top 9 bits (of 17) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:378$868 ($eq).
Removed top 1 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:394$876 ($eq).
Removed top 1 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:398$878 ($eq).
Removed top 5 bits (of 10) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:402$880 ($eq).
Removed top 4 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:489$931 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:490$933 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:491$935 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:492$937 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:493$939 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:494$941 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:495$943 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:496$945 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:497$947 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:498$949 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:499$951 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:500$953 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:501$955 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:502$957 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:503$959 ($eq).
Removed top 2 bits (of 7) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:806$1087 ($eq).
Removed top 1 bits (of 7) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:809$1089 ($eq).
Removed top 2 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1031$1211 ($mux).
Removed top 2 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1084$1239 ($mux).
Removed top 1 bits (of 2) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1091$1244 ($eq).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1096$1251 ($mux).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1103$1258 ($mux).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1109$1262 ($mux).
Removed top 4 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1112$1265 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1113$1267 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1114$1269 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1115$1271 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1116$1273 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1117$1275 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1118$1277 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1119$1279 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1120$1281 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1121$1283 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1122$1285 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1123$1287 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1124$1289 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1125$1291 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1126$1293 ($eq).
Removed top 1 bits (of 2) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1161$1339 ($eq).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1330$1514 ($mux).
Removed top 1 bits (of 2) from port B of cell RiscvTrans.$lt$CheckerWrapper.sv:1386$1569 ($lt).
Removed top 1 bits (of 2) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:1394$1571 ($eq).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1404$1581 ($mux).
Removed top 1 bits (of 5) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:1415$1586 ($mux).
Removed top 31 bits (of 32) from port B of cell RiscvTrans.$add$CheckerWrapper.sv:1418$1588 ($add).
Removed top 4 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1597$1639 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1598$1641 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1599$1643 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1600$1645 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1601$1647 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1602$1649 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1603$1651 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1604$1653 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1605$1655 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1606$1657 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1607$1659 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1608$1661 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1609$1663 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1610$1665 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:1611$1667 ($eq).
Removed top 31 bits (of 63) from port A of cell RiscvTrans.$shl$CheckerWrapper.sv:2026$2252 ($shl).
Removed top 31 bits (of 63) from port Y of cell RiscvTrans.$shl$CheckerWrapper.sv:2026$2252 ($shl).
Removed top 31 bits (of 63) from port A of cell RiscvTrans.$shl$CheckerWrapper.sv:2834$3391 ($shl).
Removed top 31 bits (of 63) from port Y of cell RiscvTrans.$shl$CheckerWrapper.sv:2834$3391 ($shl).
Removed top 29 bits (of 32) from port B of cell RiscvTrans.$add$CheckerWrapper.sv:3134$3813 ($add).
Removed top 2 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:3588$4379 ($mux).
Removed top 1 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:3683$4490 ($mux).
Removed top 1 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:3721$4528 ($mux).
Removed top 2 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4124$4979 ($mux).
Removed top 24 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4126$4980 ($mux).
Removed top 1 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4139$4993 ($mux).
Removed top 16 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4140$4994 ($mux).
Removed top 1 bits (of 6) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4146$5000 ($mux).
Removed top 16 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4147$5001 ($mux).
Removed top 32 bits (of 64) from port A of cell RiscvTrans.$mul$CheckerWrapper.sv:4272$5160 ($mul).
Removed top 32 bits (of 64) from port B of cell RiscvTrans.$mul$CheckerWrapper.sv:4272$5160 ($mul).
Removed top 33 bits (of 65) from port A of cell RiscvTrans.$mul$CheckerWrapper.sv:4349$5266 ($mul).
Removed top 32 bits (of 65) from port B of cell RiscvTrans.$mul$CheckerWrapper.sv:4349$5266 ($mul).
Removed top 1 bits (of 65) from port Y of cell RiscvTrans.$mul$CheckerWrapper.sv:4349$5266 ($mul).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$shr$CheckerWrapper.sv:4965$5953 ($shr).
Removed top 31 bits (of 32) from port Y of cell RiscvTrans.$shr$CheckerWrapper.sv:4965$5953 ($shr).
Removed top 2 bits (of 8) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:4970$5957 ($eq).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4980$5966 ($mux).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:4987$5974 ($mux).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5114$5985 ($mux).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5121$5995 ($mux).
Removed top 1 bits (of 2) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5137$6005 ($eq).
Removed top 1 bits (of 2) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5144$6013 ($eq).
Removed top 1 bits (of 2) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5234$6029 ($mux).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5286$6032 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5286$6032 ($eq).
Removed top 4 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5292$6036 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5292$6036 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5310$6047 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5310$6047 ($eq).
Removed top 2 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5313$6050 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5313$6050 ($eq).
Removed top 1 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5314$6052 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5314$6052 ($eq).
Removed top 3 bits (of 5) from port A of cell RiscvTrans.$eq$CheckerWrapper.sv:5315$6054 ($eq).
Removed top 1 bits (of 5) from port B of cell RiscvTrans.$eq$CheckerWrapper.sv:5315$6054 ($eq).
Removed top 2 bits (of 32) from port A of cell RiscvTrans.$add$CheckerWrapper.sv:5324$6061 ($add).
Removed top 28 bits (of 32) from port B of cell RiscvTrans.$add$CheckerWrapper.sv:5324$6061 ($add).
Removed top 1 bits (of 32) from port Y of cell RiscvTrans.$add$CheckerWrapper.sv:5324$6061 ($add).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5326$6063 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5327$6065 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5335$6074 ($mux).
Removed top 2 bits (of 32) from port A of cell RiscvTrans.$add$CheckerWrapper.sv:5389$6092 ($add).
Removed top 28 bits (of 32) from port B of cell RiscvTrans.$add$CheckerWrapper.sv:5389$6092 ($add).
Removed top 1 bits (of 32) from port Y of cell RiscvTrans.$add$CheckerWrapper.sv:5389$6092 ($add).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5391$6094 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5392$6096 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5399$6101 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5412$6112 ($mux).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5449$6119 ($mux).
Removed top 1 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5450$6120 ($mux).
Removed top 2 bits (of 34) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5489$6158 ($mux).
Removed top 14 bits (of 32) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5791$6211 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5450$6120 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5412$6112 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5335$6074 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5399$6101 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5327$6065 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5392$6096 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5326$6063 ($mux).
Removed top 1 bits (of 33) from mux cell RiscvTrans.$ternary$CheckerWrapper.sv:5391$6094 ($mux).
Removed top 1 bits (of 31) from port Y of cell RiscvTrans.$add$CheckerWrapper.sv:5324$6061 ($add).
Removed top 1 bits (of 31) from port Y of cell RiscvTrans.$add$CheckerWrapper.sv:5389$6092 ($add).
Removed top 2 bits (of 6) from wire RiscvTrans._GEN_2006.
Removed top 1 bits (of 6) from wire RiscvTrans._GEN_2075.
Removed top 1 bits (of 6) from wire RiscvTrans._GEN_2119.
Removed top 3 bits (of 32) from wire RiscvTrans._GEN_2187.
Removed top 6 bits (of 32) from wire RiscvTrans._GEN_2378.
Removed top 2 bits (of 6) from wire RiscvTrans._GEN_2472.
Removed top 24 bits (of 32) from wire RiscvTrans._GEN_2473.
Removed top 6 bits (of 32) from wire RiscvTrans._GEN_2475.
Removed top 1 bits (of 6) from wire RiscvTrans._GEN_2476.
Removed top 16 bits (of 32) from wire RiscvTrans._GEN_2477.
Removed top 1 bits (of 6) from wire RiscvTrans._GEN_2490.
Removed top 16 bits (of 32) from wire RiscvTrans._GEN_2491.
Removed top 6 bits (of 32) from wire RiscvTrans._GEN_2495.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3191.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3193.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3203.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3211.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3213.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3223.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3234.
Removed top 2 bits (of 34) from wire RiscvTrans._GEN_3251.
Removed top 17 bits (of 32) from wire RiscvTrans._T.
Removed top 17 bits (of 32) from wire RiscvTrans._T_12.
Removed top 17 bits (of 32) from wire RiscvTrans._T_156.
Removed top 6 bits (of 31) from wire RiscvTrans._T_167.
Removed top 6 bits (of 32) from wire RiscvTrans._T_168.
Removed top 17 bits (of 32) from wire RiscvTrans._T_18.
Removed top 17 bits (of 32) from wire RiscvTrans._T_181.
Removed top 17 bits (of 32) from wire RiscvTrans._T_208.
Removed top 17 bits (of 32) from wire RiscvTrans._T_235.
Removed top 17 bits (of 32) from wire RiscvTrans._T_24.
Removed top 17 bits (of 32) from wire RiscvTrans._T_264.
Removed top 17 bits (of 32) from wire RiscvTrans._T_291.
Removed top 17 bits (of 32) from wire RiscvTrans._T_30.
Removed top 17 bits (of 32) from wire RiscvTrans._T_320.
Removed top 17 bits (of 32) from wire RiscvTrans._T_347.
Removed top 17 bits (of 32) from wire RiscvTrans._T_367.
Removed top 17 bits (of 32) from wire RiscvTrans._T_387.
Removed top 17 bits (of 32) from wire RiscvTrans._T_407.
Removed top 17 bits (of 32) from wire RiscvTrans._T_426.
Removed top 6 bits (of 32) from wire RiscvTrans._T_433.
Removed top 17 bits (of 32) from wire RiscvTrans._T_446.
Removed top 17 bits (of 32) from wire RiscvTrans._T_469.
Removed top 17 bits (of 32) from wire RiscvTrans._T_493.
Removed top 17 bits (of 32) from wire RiscvTrans._T_532.
Removed top 17 bits (of 32) from wire RiscvTrans._T_6.
Removed top 1 bits (of 5) from wire RiscvTrans._exceptionNO_T_10.
Removed top 2 bits (of 5) from wire RiscvTrans._exceptionNO_T_4.
Removed top 2 bits (of 5) from wire RiscvTrans._exceptionNO_T_5.
Removed top 1 bits (of 5) from wire RiscvTrans._exceptionNO_T_6.
Removed top 1 bits (of 5) from wire RiscvTrans._exceptionNO_T_7.
Removed top 1 bits (of 5) from wire RiscvTrans._exceptionNO_T_8.
Removed top 1 bits (of 5) from wire RiscvTrans._exceptionNO_T_9.
Removed top 27 bits (of 31) from wire RiscvTrans._next_csr_mcause_T.
Removed top 28 bits (of 32) from wire RiscvTrans._next_csr_mcause_T_1.
Removed top 6 bits (of 31) from wire RiscvTrans._next_csr_mtval_T_4.
Removed top 6 bits (of 32) from wire RiscvTrans._next_csr_mtval_T_5.
Removed top 27 bits (of 31) from wire RiscvTrans._next_csr_scause_T.
Removed top 28 bits (of 32) from wire RiscvTrans._next_csr_scause_T_1.
Removed top 28 bits (of 32) from wire RiscvTrans._next_pc_T_23.
Removed top 31 bits (of 32) from wire RiscvTrans._next_pc_T_25.
Removed top 28 bits (of 32) from wire RiscvTrans._next_pc_T_30.
Removed top 31 bits (of 32) from wire RiscvTrans._next_pc_T_32.
Removed top 6 bits (of 31) from wire RiscvTrans._next_pc_T_4.
Removed top 6 bits (of 32) from wire RiscvTrans._next_pc_T_5.
Removed top 6 bits (of 32) from wire RiscvTrans._next_reg_rd.
Removed top 31 bits (of 32) from wire RiscvTrans._next_reg_rd_0.
Removed top 31 bits (of 32) from wire RiscvTrans._next_reg_rd_1.
Removed top 1 bits (of 5) from wire RiscvTrans.exceptionNO.
Removed top 1 bits (of 2) from port B of cell nerv.$ne$nerv.sv:571$120 ($ne).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$134 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$138 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$142 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$146 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$150 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$154 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$158 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$162 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$166 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$170 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$304 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$306 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$308 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$310 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$312 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$314 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$316 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$318 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$320 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$322 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$324 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$326 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$328 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$330 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$332 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$334 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$336 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$338 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$340 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$342 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$344 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$346 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$348 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$350 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$352 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$354 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$356 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$358 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$eq$nerv.sv:619$360 ($eq).
Removed top 29 bits (of 32) from port B of cell nerv.$add$nerv.sv:657$371 ($add).
Removed top 31 bits (of 32) from port B of cell nerv.$add$nerv.sv:767$592 ($add).
Removed top 31 bits (of 32) from mux cell nerv.$ternary$nerv.sv:759$593 ($mux).
Removed top 31 bits (of 32) from mux cell nerv.$ternary$nerv.sv:760$594 ($mux).
Removed top 31 bits (of 32) from port B of cell nerv.$add$nerv.sv:767$598 ($add).
Removed top 28 bits (of 32) from port A of cell nerv.$mul$nerv.sv:935$716 ($mul).
Removed top 26 bits (of 32) from port Y of cell nerv.$mul$nerv.sv:935$716 ($mul).
Removed top 26 bits (of 32) from port B of cell nerv.$shl$nerv.sv:935$717 ($shl).
Removed top 20 bits (of 32) from port B of cell nerv.$lt$nerv.sv:947$720 ($lt).
Removed top 25 bits (of 32) from port B of cell nerv.$add$nerv.sv:1062$747 ($add).
Removed top 28 bits (of 32) from port A of cell nerv.$mul$nerv.sv:1105$759 ($mul).
Removed top 26 bits (of 32) from port Y of cell nerv.$mul$nerv.sv:1105$759 ($mul).
Removed top 26 bits (of 32) from port B of cell nerv.$shr$nerv.sv:1105$760 ($shr).
Removed top 27 bits (of 32) from mux cell nerv.$ternary$nerv.sv:1131$773 ($mux).
Removed top 31 bits (of 32) from port B of cell nerv.$add$nerv.sv:1138$777 ($add).
Removed top 3 bits (of 4) from port A of cell nerv.$shl$nerv.sv:1154$779 ($shl).
Removed top 2 bits (of 4) from port A of cell nerv.$shl$nerv.sv:1155$780 ($shl).
Removed top 29 bits (of 32) from mux cell nerv.$ternary$nerv.sv:1225$785 ($mux).
Removed top 31 bits (of 32) from port A of cell nerv.$sub$nerv.sv:1225$786 ($sub).
Removed top 29 bits (of 32) from port B of cell nerv.$sub$nerv.sv:1225$786 ($sub).
Removed top 28 bits (of 32) from port Y of cell nerv.$sub$nerv.sv:1225$786 ($sub).
Removed top 2 bits (of 3) from port B of cell nerv.$procmux$7975_CMP0 ($eq).
Removed top 2 bits (of 12) from port B of cell nerv.$procmux$8489_CMP0 ($eq).
Removed top 11 bits (of 12) from port B of cell nerv.$procmux$8490_CMP0 ($eq).
Removed top 3 bits (of 12) from port B of cell nerv.$procmux$8548_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell nerv.$procmux$8608_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell nerv.$procmux$8609_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell nerv.$procmux$8610_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell nerv.$procmux$8611_CMP0 ($eq).
Removed top 7 bits (of 10) from port B of cell nerv.$procmux$8612_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell nerv.$procmux$8613_CMP0 ($eq).
Removed top 8 bits (of 10) from port B of cell nerv.$procmux$8614_CMP0 ($eq).
Removed top 9 bits (of 10) from port B of cell nerv.$procmux$8615_CMP0 ($eq).
Removed top 1 bits (of 10) from port B of cell nerv.$procmux$8616_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell nerv.$procmux$8619_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell nerv.$procmux$8663_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell nerv.$procmux$8664_CMP0 ($eq).
Removed top 2 bits (of 7) from port B of cell nerv.$procmux$8667_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell nerv.$procmux$8708_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nerv.$procmux$8711_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell nerv.$procmux$8711_CMP2 ($eq).
Removed top 1 bits (of 7) from port B of cell nerv.$procmux$8713_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell nerv.$procmux$8719 ($mux).
Removed top 2 bits (of 4) from port B of cell nerv.$procmux$8766_CMP1 ($eq).
Removed top 1 bits (of 5) from port B of cell nerv.$procmux$8766_CMP2 ($eq).
Removed top 30 bits (of 32) from mux cell nerv.$procmux$8765 ($mux).
Removed top 5 bits (of 7) from port B of cell nerv.$procmux$8768_CMP0 ($eq).
Removed top 30 bits (of 32) from mux cell nerv.$procmux$8816 ($mux).
Removed top 30 bits (of 32) from mux cell nerv.$procmux$8970 ($mux).
Removed top 30 bits (of 32) from mux cell nerv.$procmux$9043 ($mux).
Removed top 2 bits (of 7) from port B of cell nerv.$procmux$9067_CMP0 ($eq).
Removed top 1 bits (of 7) from port B of cell nerv.$procmux$9068_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9162_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9161 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9163_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9164_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9173_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9172 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9174_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9175_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9184_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9183 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9185_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9186_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9195_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9194 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9196_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9197_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9206_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9205 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9207_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9208_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9217_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9216 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9218_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9219_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9228_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9227 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9229_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9230_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9239_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9238 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9240_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9241_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9250_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9249 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9251_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9252_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9261_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9260 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9262_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9263_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9272_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9271 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9273_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9274_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9283_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9282 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9284_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9285_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9294_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9293 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9295_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9296_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9305_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9304 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9306_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9307_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9316_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9315 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9317_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9318_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9327_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9326 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9328_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9329_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9338_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9337 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9339_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9340_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9349_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9348 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9350_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9351_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9360_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9359 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9361_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9362_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9371_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9370 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9372_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9373_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9382_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9381 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9383_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9384_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9393_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9392 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9394_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9395_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9404_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9403 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9405_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9406_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9415_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9414 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9416_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9417_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9426_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9425 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9427_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9428_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9437_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9436 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9438_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9439_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9448_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9447 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9449_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9450_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9459_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9458 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9460_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9461_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9470_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9469 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9471_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9472_CMP0 ($eq).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9492_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv.$procmux$9491 ($pmux).
Removed top 30 bits (of 32) from port B of cell nerv.$procmux$9493_CMP0 ($eq).
Removed top 31 bits (of 32) from port B of cell nerv.$procmux$9494_CMP0 ($eq).
Removed top 1 bits (of 2) from port B of cell nerv.$procmux$9516_CMP0 ($eq).
Removed top 3 bits (of 5) from mux cell nerv.$procmux$9952 ($mux).
Removed top 2 bits (of 5) from mux cell nerv.$procmux$10009 ($mux).
Removed top 1 bits (of 5) from mux cell nerv.$procmux$10063 ($mux).
Removed top 19 bits (of 32) from mux cell nerv.$procmux$10547 ($mux).
Removed top 19 bits (of 32) from wire nerv.$0\csr_mstatus_value[31:0].
Removed top 31 bits (of 32) from wire nerv.$10\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$12\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$14\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$16\hpm_increment[31:0].
Removed top 1 bits (of 5) from wire nerv.$17\irq_num[4:0].
Removed top 31 bits (of 32) from wire nerv.$18\hpm_increment[31:0].
Removed top 2 bits (of 5) from wire nerv.$18\irq_num[4:0].
Removed top 31 bits (of 32) from wire nerv.$20\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$22\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$24\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$26\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$28\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$2\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$30\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$3\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$5\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$7\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$9\hpm_increment[31:0].
Removed top 31 bits (of 32) from wire nerv.$lt$nerv.sv:947$720_Y.
Removed top 31 bits (of 32) from wire nerv.$lt$nerv.sv:965$731_Y.
Removed top 26 bits (of 32) from wire nerv.$mul$nerv.sv:1105$759_Y.
Removed top 26 bits (of 32) from wire nerv.$mul$nerv.sv:935$716_Y.
Removed top 27 bits (of 32) from wire nerv.$ternary$nerv.sv:1131$773_Y.
Removed top 29 bits (of 32) from wire nerv.$ternary$nerv.sv:1225$785_Y.
Removed top 24 bits (of 32) from wire nerv.csr_mstatus_next.
Removed top 31 bits (of 32) from wire nerv.hpm_increment.
Removed top 11 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:130$14 ($eq).
Removed top 1 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:131$17 ($eq).
Removed top 9 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:132$21 ($eq).
Removed top 8 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:133$25 ($eq).
Removed top 8 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:134$29 ($eq).
Removed top 7 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:135$33 ($eq).
Removed top 7 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:136$37 ($eq).
Removed top 1 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:137$41 ($eq).
Removed top 7 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:138$45 ($eq).
Removed top 7 bits (of 17) from port B of cell nerv_extended_wrapper.$eq$nerv_wrapper.sv:139$49 ($eq).
Removed top 2 bits (of 4) from port B of cell nerv_extended_wrapper.$procmux$10562_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell nerv_extended_wrapper.$procmux$10563_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell nerv_extended_wrapper.$procmux$10567_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell nerv_extended_wrapper.$procmux$10568_CMP0 ($eq).
Removed top 31 bits (of 32) from mux cell nerv_extended_wrapper.$procmux$10570 ($mux).
Removed top 31 bits (of 32) from mux cell nerv_extended_wrapper.$procmux$10585 ($mux).
Removed top 31 bits (of 32) from wire nerv_extended_wrapper.$0\shadow_regfile[10][31:0].
Removed top 31 bits (of 32) from wire nerv_extended_wrapper.exception_pc.

6.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CheckerWithResult..
Finding unused cells or wires in module \CheckerWrapper..
Finding unused cells or wires in module \RiscvCore..
Finding unused cells or wires in module \RiscvTrans..
Finding unused cells or wires in module \nerv..
Finding unused cells or wires in module \nerv_extended_wrapper..
Finding unused cells or wires in module \top_formal..
Removed 0 unused cells and 98 unused wires.
<suppressed ~3 debug messages>

6.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.11. Executing OPT pass (performing simple optimizations).

6.11.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module CheckerWithResult.
Optimizing module CheckerWrapper.
Optimizing module RiscvCore.
Optimizing module RiscvTrans.
Optimizing module nerv.
Optimizing module nerv_extended_wrapper.
Optimizing module top_formal.

6.11.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\CheckerWithResult'.
Finding identical cells in module `\CheckerWrapper'.
Finding identical cells in module `\RiscvCore'.
Finding identical cells in module `\RiscvTrans'.
Finding identical cells in module `\nerv'.
<suppressed ~6 debug messages>
Finding identical cells in module `\nerv_extended_wrapper'.
Finding identical cells in module `\top_formal'.
Removed a total of 2 cells.

6.11.3. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \CheckerWithResult..
Finding unused cells or wires in module \CheckerWrapper..
Finding unused cells or wires in module \RiscvCore..
Finding unused cells or wires in module \RiscvTrans..
Finding unused cells or wires in module \nerv..
Finding unused cells or wires in module \nerv_extended_wrapper..
Finding unused cells or wires in module \top_formal..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.11.4. Finished fast OPT passes.

6.12. Printing statistics.

=== CheckerWithResult ===

   Number of wires:                377
   Number of wire bits:           7221
   Number of public wires:         310
   Number of public wire bits:    7154
   Number of ports:                 88
   Number of port bits:           2476
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                132
     $and                            4
     $check                         59
     $eq                            58
     $logic_not                      1
     $mux                            5
     $not                            1
     $or                             3
     RiscvCore                       1

=== CheckerWrapper ===

   Number of wires:                176
   Number of wire bits:           4952
   Number of public wires:         176
   Number of public wire bits:    4952
   Number of ports:                 88
   Number of port bits:           2476
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     CheckerWithResult               1

=== RiscvCore ===

   Number of wires:                612
   Number of wire bits:          16926
   Number of public wires:         542
   Number of public wire bits:   14788
   Number of ports:                158
   Number of port bits:           4614
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                141
     $dff                           70
     $mux                           70
     RiscvTrans                      1

=== RiscvTrans ===

   Number of wires:               5028
   Number of wire bits:         108587
   Number of public wires:        4910
   Number of public wire bits:  108469
   Number of ports:                158
   Number of port bits:           4614
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3249
     $add                            7
     $and                           36
     $div                            2
     $eq                           164
     $ge                             2
     $logic_not                      9
     $lt                             6
     $mod                            2
     $mul                            3
     $mux                         2975
     $ne                             2
     $not                            2
     $or                            28
     $shl                            2
     $shr                            4
     $sshr                           2
     $sub                            1
     $xor                            2

=== nerv ===

   Number of wires:               2278
   Number of wire bits:          59888
   Number of public wires:         956
   Number of public wire bits:   34586
   Number of ports:                468
   Number of port bits:          14504
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               2111
     $add                           41
     $and                            4
     $dff                          474
     $eq                           244
     $ge                             2
     $logic_and                    228
     $logic_not                     13
     $logic_or                       8
     $lt                             4
     $mem_v2                         1
     $mul                            2
     $mux                          979
     $ne                             2
     $not                            1
     $or                             3
     $pmux                          44
     $reduce_bool                    4
     $reduce_or                     41
     $shl                            7
     $shr                            3
     $sshr                           2
     $sub                            2
     $xor                            2

=== nerv_extended_wrapper ===

   Number of wires:                234
   Number of wire bits:           4809
   Number of public wires:         188
   Number of public wire bits:    4441
   Number of ports:                 89
   Number of port bits:           2508
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 94
     $anyseq                         3
     $check                          2
     $dff                           39
     $eq                            16
     $logic_and                      1
     $logic_or                       9
     $mux                           20
     $pmux                           2
     $reduce_bool                    1
     nerv                            1

=== top_formal ===

   Number of wires:                 65
   Number of wire bits:           1842
   Number of public wires:          65
   Number of public wire bits:    1842
   Number of ports:                  2
   Number of port bits:              2
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     CheckerWrapper                  1
     nerv_extended_wrapper           1

=== design hierarchy ===

   top_formal                        1
     CheckerWrapper                  1
       CheckerWithResult             1
         RiscvCore                   1
           RiscvTrans                1
     nerv_extended_wrapper           1
       nerv                          1

   Number of wires:               8770
   Number of wire bits:         204225
   Number of public wires:        7147
   Number of public wire bits:  176232
   Number of ports:               1051
   Number of port bits:          31194
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5724
     $add                           48
     $and                           44
     $anyseq                         3
     $check                         61
     $dff                          583
     $div                            2
     $eq                           482
     $ge                             4
     $logic_and                    229
     $logic_not                     23
     $logic_or                      17
     $lt                            10
     $mem_v2                         1
     $mod                            2
     $mul                            5
     $mux                         4049
     $ne                             4
     $not                            4
     $or                            34
     $pmux                          46
     $reduce_bool                    5
     $reduce_or                     41
     $shl                            9
     $shr                            7
     $sshr                           4
     $sub                            3
     $xor                            4

6.13. Executing CHECK pass (checking for obvious problems).
Checking module CheckerWithResult...
Checking module CheckerWrapper...
Checking module RiscvCore...
Checking module RiscvTrans...
Checking module nerv...
Warning: Wire nerv.\dbg_reg_x3 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x3 [0] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x2 [0] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [31] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [30] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [29] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [28] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [27] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [26] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [25] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [24] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [23] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [22] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [21] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [20] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [19] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [18] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [17] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [16] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [15] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [14] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [13] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [12] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [11] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [10] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [9] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [8] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [7] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [6] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [5] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [4] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [3] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [2] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [1] is used but has no driver.
Warning: Wire nerv.\dbg_reg_x1 [0] is used but has no driver.
Checking module nerv_extended_wrapper...
Warning: Wire nerv_extended_wrapper.\result_pc [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_stvec [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_stval [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_sscratch [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_sepc [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_scounteren [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_scause [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_satp [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg3 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg2 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg1 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpcfg0 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr3 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr2 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr1 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_pmpaddr0 [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_mideleg [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_medeleg [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\result_csr_cycle [0] is used but has no driver.
Warning: Wire nerv_extended_wrapper.\uut.rvfi_trap is used but has no driver.
Warning: Wire nerv_extended_wrapper.\uut.rvfi_csr_mepc_rdata is used but has no driver.
Warning: Wire nerv_extended_wrapper.\clk is used but has no driver.
Checking module top_formal...
Warning: Wire top_formal.\io_mem_write_memWidth [5] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [4] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [3] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [2] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [1] is used but has no driver.
Warning: Wire top_formal.\io_mem_write_memWidth [0] is used but has no driver.
Found and reported 124 problems.

7. Executing HIERARCHY pass (managing design hierarchy).

7.1. Analyzing design hierarchy..
Top module:  \top_formal
Used module:     \CheckerWrapper
Used module:         \CheckerWithResult
Used module:             \RiscvCore
Used module:                 \RiscvTrans
Used module:     \nerv_extended_wrapper
Used module:         \nerv

7.2. Analyzing design hierarchy..
Top module:  \top_formal
Used module:     \CheckerWrapper
Used module:         \CheckerWithResult
Used module:             \RiscvCore
Used module:                 \RiscvTrans
Used module:     \nerv_extended_wrapper
Used module:         \nerv
Removed 0 unused modules.
Module CheckerWithResult directly or indirectly contains formal properties -> setting "keep" attribute.
Module CheckerWrapper directly or indirectly contains formal properties -> setting "keep" attribute.
Module nerv_extended_wrapper directly or indirectly contains formal properties -> setting "keep" attribute.
Module top_formal directly or indirectly contains formal properties -> setting "keep" attribute.

8. Executing jny backend.

9. Executing RTLIL backend.
Output filename: ../model/design.il

Warnings: 212 unique messages, 367 total
End of script. Logfile hash: 835b9901aa, CPU: user 10.23s system 0.24s, MEM: 147.41 MB peak
Yosys 0.46+124 (git sha1 d1695ad99, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
Time spent: 37% 5x opt_clean (3 sec), 13% 2x check (1 sec), ...
